{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "carbonIntensity",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "priceCarbon",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "ElectricityDataReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "ElectricityDataRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oracleAddress",
						"type": "address"
					}
				],
				"name": "OracleAddressChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "carbonIntensity",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "priceCarbon",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "fulfillElectricityDataRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getElectricityData",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "carbonIntensity",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "priceCarbon",
								"type": "uint256"
							}
						],
						"internalType": "struct Caller.ElectricityData",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAddress",
						"type": "address"
					}
				],
				"name": "setElectricityOracleAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"smart-contracts/contracts/energyContracts/Caller.sol": "Caller"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
				"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"smart-contracts/contracts/energyContracts/Caller.sol": {
			"keccak256": "0x8ff2795cc9f1aae9cd2f6235d6595e565b53863c293505d3dd22a0e35673cefc",
			"license": "MIT",
			"urls": [
				"bzz-raw://30a9b5d0d68b6dbaf6985b09eb33fcf565033ca35b223f22f6d974f0bea526b8",
				"dweb:/ipfs/QmSfKnjyxrLikJUNmKVQpSnN8QgowB4CcPMYACuDfkMxeR"
			]
		},
		"smart-contracts/contracts/energyContracts/IElectricityOracle.sol": {
			"keccak256": "0x3954625683d1d688ac481a07b31429b3eabdcb692e806cdec1415d9d8edf520a",
			"license": "MIT",
			"urls": [
				"bzz-raw://88ef09fcd88867cb5cdd2933002ffe2b08a56eccbe724cf867a7afcc1d69631c",
				"dweb:/ipfs/Qmdn5QneSbjsZtQMHFEUR4kqjZzzi9PLZdqL8VF7vrYtaC"
			]
		}
	},
	"version": 1
}