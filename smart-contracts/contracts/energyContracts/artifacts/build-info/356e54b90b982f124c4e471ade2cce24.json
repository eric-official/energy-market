{
	"id": "356e54b90b982f124c4e471ade2cce24",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"smart-contracts/contracts/energyContracts/Caller.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./IElectricityOracle.sol\";\n\ncontract Caller is Ownable {\n    IElectricityOracle private electricityOracle;\n\n    mapping(uint256=>bool)  requests;\n    mapping(uint256=>ElectricityData) results;\n\n    uint256 latestDataRequestTimestamp;\n    uint256 latestId;\n\n    struct ElectricityData {\n        uint256 carbonIntensity; // \n        uint256 priceCarbon; // in kWh\n    }\n    \n    modifier onlyElectricityOracle() {\n        require(msg.sender == address(electricityOracle), \"Unauthorized.\");\n        _;\n    }\n\n    function setElectricityOracleAddress(address newAddress) external onlyOwner {\n        electricityOracle = IElectricityOracle(newAddress);\n\n        emit OracleAddressChanged(newAddress);\n    }\n\n    function getElectricityData() external returns(ElectricityData memory) {\n        require(electricityOracle != IElectricityOracle(address(0)), \"Oracle not initialized.\");\n\n        if (block.timestamp <= latestDataRequestTimestamp + 10 minutes) {\n             \n            uint256 id = electricityOracle.requestElectricityData();\n            requests[id] = true;\n\n            emit ElectricityDataRequested(id);\n\n            latestId = id;\n        }\n\n        return results[latestId];\n    }\n\n    function fulfillElectricityDataRequest(uint256 carbonIntensity, uint256 priceCarbon, uint256 id) external onlyElectricityOracle {\n        require(requests[id], \"Request is invalid or already fulfilled.\");\n\n        results[id] = ElectricityData(carbonIntensity, priceCarbon);\n        delete requests[id];\n\n        emit ElectricityDataReceived(carbonIntensity, priceCarbon, id);\n    }\n\n    event OracleAddressChanged(address oracleAddress);\n    event ElectricityDataRequested(uint256 id);\n    event ElectricityDataReceived(uint256 carbonIntensity, uint256 priceCarbon, uint256 id);\n}"
			},
			"smart-contracts/contracts/energyContracts/IElectricityOracle.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\n\ninterface IElectricityOracle {\n    function requestElectricityData() external returns (uint256);\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"smart-contracts/contracts/energyContracts/Caller.sol": {
				"Caller": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "carbonIntensity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "priceCarbon",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ElectricityDataReceived",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "ElectricityDataRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "oracleAddress",
									"type": "address"
								}
							],
							"name": "OracleAddressChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "carbonIntensity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "priceCarbon",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "fulfillElectricityDataRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getElectricityData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "carbonIntensity",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "priceCarbon",
											"type": "uint256"
										}
									],
									"internalType": "struct Caller.ElectricityData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAddress",
									"type": "address"
								}
							],
							"name": "setElectricityOracleAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"smart-contracts/contracts/energyContracts/Caller.sol\":154:1907  contract Caller is Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"smart-contracts/contracts/energyContracts/Caller.sol\":154:1907  contract Caller is Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"smart-contracts/contracts/energyContracts/Caller.sol\":154:1907  contract Caller is Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":154:1907  contract Caller is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06c04593\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2c8a7526\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdeb93ef0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1326:1708  function fulfillElectricityDataRequest(uint256 carbonIntensity, uint256 priceCarbon, uint256 id) external onlyElectricityOracle {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":833:1320  function getElectricityData() external returns(ElectricityData memory) {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":636:827  function setElectricityOracleAddress(address newAddress) external onlyOwner {... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1326:1708  function fulfillElectricityDataRequest(uint256 carbonIntensity, uint256 priceCarbon, uint256 id) external onlyElectricityOracle {... */\n    tag_12:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":576:593  electricityOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":554:594  msg.sender == address(electricityOracle) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":554:564  msg.sender */\n      caller\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":554:594  msg.sender == address(electricityOracle) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":546:612  require(msg.sender == address(electricityOracle), \"Unauthorized.\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1472:1480  requests */\n      0x02\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1472:1484  requests[id] */\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1481:1483  id */\n      dup3\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1472:1484  requests[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1464:1529  require(requests[id], \"Request is invalid or already fulfilled.\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1554:1599  ElectricityData(carbonIntensity, priceCarbon) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1570:1585  carbonIntensity */\n      dup5\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1554:1599  ElectricityData(carbonIntensity, priceCarbon) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1587:1598  priceCarbon */\n      dup4\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1554:1599  ElectricityData(carbonIntensity, priceCarbon) */\n      dup2\n      mstore\n      pop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1540:1547  results */\n      0x03\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1540:1551  results[id] */\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1548:1550  id */\n      dup4\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1540:1551  results[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1540:1599  results[id] = ElectricityData(carbonIntensity, priceCarbon) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1616:1624  requests */\n      0x02\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1616:1628  requests[id] */\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1625:1627  id */\n      dup3\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1616:1628  requests[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1609:1628  delete requests[id] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1644:1701  ElectricityDataReceived(carbonIntensity, priceCarbon, id) */\n      0xac692744937aaf6b0bdbd8e64a6994b068c12dcf93bf43bf34e349496317f729\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1668:1683  carbonIntensity */\n      dup4\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1685:1696  priceCarbon */\n      dup4\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1698:1700  id */\n      dup4\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1644:1701  ElectricityDataReceived(carbonIntensity, priceCarbon, id) */\n      mload(0x40)\n      tag_38\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1326:1708  function fulfillElectricityDataRequest(uint256 carbonIntensity, uint256 priceCarbon, uint256 id) external onlyElectricityOracle {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":833:1320  function getElectricityData() external returns(ElectricityData memory) {... */\n    tag_14:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":880:902  ElectricityData memory */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":970:971  0 */\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":922:973  electricityOracle != IElectricityOracle(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":922:939  electricityOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":922:973  electricityOracle != IElectricityOracle(address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":914:1001  require(electricityOracle != IElectricityOracle(address(0)), \"Oracle not initialized.\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1064:1074  10 minutes */\n      0x0258\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1035:1061  latestDataRequestTimestamp */\n      sload(0x04)\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1035:1074  latestDataRequestTimestamp + 10 minutes */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1016:1031  block.timestamp */\n      timestamp\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1016:1074  block.timestamp <= latestDataRequestTimestamp + 10 minutes */\n      gt\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1012:1279  if (block.timestamp <= latestDataRequestTimestamp + 10 minutes) {... */\n      tag_48\n      jumpi\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1104:1114  uint256 id */\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1117:1134  electricityOracle */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1117:1157  electricityOracle.requestElectricityData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfe66d9df\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1117:1159  electricityOracle.requestElectricityData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1104:1159  uint256 id = electricityOracle.requestElectricityData() */\n      swap1\n      pop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1188:1192  true */\n      0x01\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1173:1181  requests */\n      0x02\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1173:1185  requests[id] */\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1182:1184  id */\n      dup4\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1173:1185  requests[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1173:1192  requests[id] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1212:1240  ElectricityDataRequested(id) */\n      0xe99dd399072a7d799ffff8860fe4ea02424a7301da2e2f2c3efc7ffcfafe4819\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1237:1239  id */\n      dup2\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1212:1240  ElectricityDataRequested(id) */\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1266:1268  id */\n      dup1\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1255:1263  latestId */\n      0x05\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1255:1268  latestId = id */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1076:1279  {... */\n      pop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1012:1279  if (block.timestamp <= latestDataRequestTimestamp + 10 minutes) {... */\n    tag_48:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1296:1303  results */\n      0x03\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1296:1313  results[latestId] */\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1304:1312  latestId */\n      sload(0x05)\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1296:1313  results[latestId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":1289:1313  return results[latestId] */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":833:1320  function getElectricityData() external returns(ElectricityData memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":636:827  function setElectricityOracleAddress(address newAddress) external onlyOwner {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_63:\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":761:771  newAddress */\n      dup1\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":722:739  electricityOracle */\n      0x01\n      0x00\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":722:772  electricityOracle = IElectricityOracle(newAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":788:820  OracleAddressChanged(newAddress) */\n      0xe420b96152542f57ce3d2d26d939a3c2860a82361801ad0a970a3badc32d538e\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":809:819  newAddress */\n      dup2\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":788:820  OracleAddressChanged(newAddress) */\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"smart-contracts/contracts/energyContracts/Caller.sol\":636:827  function setElectricityOracleAddress(address newAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_57\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_76\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_41:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_83:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_85:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_86:\n        /* \"#utility.yul\":490:514   */\n      tag_115\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_85\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_116\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_116:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_87:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_118\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_86\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_11:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      dup1\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_121\n      tag_83\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":800:919   */\n    tag_120:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_122\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_87\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_123\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_87\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_124\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_87\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1423   */\n    tag_88:\n        /* \"#utility.yul\":1392:1416   */\n      tag_126\n        /* \"#utility.yul\":1410:1415   */\n      dup2\n        /* \"#utility.yul\":1392:1416   */\n      tag_85\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":1387:1390   */\n      dup3\n        /* \"#utility.yul\":1380:1417   */\n      mstore\n        /* \"#utility.yul\":1315:1423   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:2038   */\n    tag_89:\n        /* \"#utility.yul\":1660:1664   */\n      0x40\n        /* \"#utility.yul\":1655:1658   */\n      dup3\n        /* \"#utility.yul\":1651:1665   */\n      add\n        /* \"#utility.yul\":1758:1762   */\n      0x00\n        /* \"#utility.yul\":1751:1756   */\n      dup3\n        /* \"#utility.yul\":1747:1763   */\n      add\n        /* \"#utility.yul\":1741:1764   */\n      mload\n        /* \"#utility.yul\":1777:1840   */\n      tag_128\n        /* \"#utility.yul\":1834:1838   */\n      0x00\n        /* \"#utility.yul\":1829:1832   */\n      dup6\n        /* \"#utility.yul\":1825:1839   */\n      add\n        /* \"#utility.yul\":1811:1823   */\n      dup3\n        /* \"#utility.yul\":1777:1840   */\n      tag_88\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1675:1850   */\n      pop\n        /* \"#utility.yul\":1939:1943   */\n      0x20\n        /* \"#utility.yul\":1932:1937   */\n      dup3\n        /* \"#utility.yul\":1928:1944   */\n      add\n        /* \"#utility.yul\":1922:1945   */\n      mload\n        /* \"#utility.yul\":1958:2021   */\n      tag_129\n        /* \"#utility.yul\":2015:2019   */\n      0x20\n        /* \"#utility.yul\":2010:2013   */\n      dup6\n        /* \"#utility.yul\":2006:2020   */\n      add\n        /* \"#utility.yul\":1992:2004   */\n      dup3\n        /* \"#utility.yul\":1958:2021   */\n      tag_88\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":1860:2031   */\n      pop\n        /* \"#utility.yul\":1629:2038   */\n      pop\n        /* \"#utility.yul\":1499:2038   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2044:2394   */\n    tag_16:\n        /* \"#utility.yul\":2201:2205   */\n      0x00\n        /* \"#utility.yul\":2239:2241   */\n      0x40\n        /* \"#utility.yul\":2228:2237   */\n      dup3\n        /* \"#utility.yul\":2224:2242   */\n      add\n        /* \"#utility.yul\":2216:2242   */\n      swap1\n      pop\n        /* \"#utility.yul\":2252:2387   */\n      tag_131\n        /* \"#utility.yul\":2384:2385   */\n      0x00\n        /* \"#utility.yul\":2373:2382   */\n      dup4\n        /* \"#utility.yul\":2369:2386   */\n      add\n        /* \"#utility.yul\":2360:2366   */\n      dup5\n        /* \"#utility.yul\":2252:2387   */\n      tag_89\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2044:2394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2400:2526   */\n    tag_90:\n        /* \"#utility.yul\":2437:2444   */\n      0x00\n        /* \"#utility.yul\":2477:2519   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2470:2475   */\n      dup3\n        /* \"#utility.yul\":2466:2520   */\n      and\n        /* \"#utility.yul\":2455:2520   */\n      swap1\n      pop\n        /* \"#utility.yul\":2400:2526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2532:2628   */\n    tag_91:\n        /* \"#utility.yul\":2569:2576   */\n      0x00\n        /* \"#utility.yul\":2598:2622   */\n      tag_134\n        /* \"#utility.yul\":2616:2621   */\n      dup3\n        /* \"#utility.yul\":2598:2622   */\n      tag_90\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2587:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2532:2628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2634:2752   */\n    tag_92:\n        /* \"#utility.yul\":2721:2745   */\n      tag_136\n        /* \"#utility.yul\":2739:2744   */\n      dup2\n        /* \"#utility.yul\":2721:2745   */\n      tag_91\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2716:2719   */\n      dup3\n        /* \"#utility.yul\":2709:2746   */\n      mstore\n        /* \"#utility.yul\":2634:2752   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2758:2980   */\n    tag_22:\n        /* \"#utility.yul\":2851:2855   */\n      0x00\n        /* \"#utility.yul\":2889:2891   */\n      0x20\n        /* \"#utility.yul\":2878:2887   */\n      dup3\n        /* \"#utility.yul\":2874:2892   */\n      add\n        /* \"#utility.yul\":2866:2892   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:2973   */\n      tag_138\n        /* \"#utility.yul\":2970:2971   */\n      0x00\n        /* \"#utility.yul\":2959:2968   */\n      dup4\n        /* \"#utility.yul\":2955:2972   */\n      add\n        /* \"#utility.yul\":2946:2952   */\n      dup5\n        /* \"#utility.yul\":2902:2973   */\n      tag_92\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2758:2980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2986:3108   */\n    tag_93:\n        /* \"#utility.yul\":3059:3083   */\n      tag_140\n        /* \"#utility.yul\":3077:3082   */\n      dup2\n        /* \"#utility.yul\":3059:3083   */\n      tag_91\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3052:3057   */\n      dup2\n        /* \"#utility.yul\":3049:3084   */\n      eq\n        /* \"#utility.yul\":3039:3102   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":3098:3099   */\n      0x00\n        /* \"#utility.yul\":3095:3096   */\n      dup1\n        /* \"#utility.yul\":3088:3100   */\n      revert\n        /* \"#utility.yul\":3039:3102   */\n    tag_141:\n        /* \"#utility.yul\":2986:3108   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3114:3253   */\n    tag_94:\n        /* \"#utility.yul\":3160:3165   */\n      0x00\n        /* \"#utility.yul\":3198:3204   */\n      dup2\n        /* \"#utility.yul\":3185:3205   */\n      calldataload\n        /* \"#utility.yul\":3176:3205   */\n      swap1\n      pop\n        /* \"#utility.yul\":3214:3247   */\n      tag_143\n        /* \"#utility.yul\":3241:3246   */\n      dup2\n        /* \"#utility.yul\":3214:3247   */\n      tag_93\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3114:3253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3259:3588   */\n    tag_25:\n        /* \"#utility.yul\":3318:3324   */\n      0x00\n        /* \"#utility.yul\":3367:3369   */\n      0x20\n        /* \"#utility.yul\":3355:3364   */\n      dup3\n        /* \"#utility.yul\":3346:3353   */\n      dup5\n        /* \"#utility.yul\":3342:3365   */\n      sub\n        /* \"#utility.yul\":3338:3370   */\n      slt\n        /* \"#utility.yul\":3335:3454   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3373:3452   */\n      tag_146\n      tag_83\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":3335:3454   */\n    tag_145:\n        /* \"#utility.yul\":3493:3494   */\n      0x00\n        /* \"#utility.yul\":3518:3571   */\n      tag_147\n        /* \"#utility.yul\":3563:3570   */\n      dup5\n        /* \"#utility.yul\":3554:3560   */\n      dup3\n        /* \"#utility.yul\":3543:3552   */\n      dup6\n        /* \"#utility.yul\":3539:3561   */\n      add\n        /* \"#utility.yul\":3518:3571   */\n      tag_94\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3508:3571   */\n      swap2\n      pop\n        /* \"#utility.yul\":3464:3581   */\n      pop\n        /* \"#utility.yul\":3259:3588   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3594:3763   */\n    tag_95:\n        /* \"#utility.yul\":3678:3689   */\n      0x00\n        /* \"#utility.yul\":3712:3718   */\n      dup3\n        /* \"#utility.yul\":3707:3710   */\n      dup3\n        /* \"#utility.yul\":3700:3719   */\n      mstore\n        /* \"#utility.yul\":3752:3756   */\n      0x20\n        /* \"#utility.yul\":3747:3750   */\n      dup3\n        /* \"#utility.yul\":3743:3757   */\n      add\n        /* \"#utility.yul\":3728:3757   */\n      swap1\n      pop\n        /* \"#utility.yul\":3594:3763   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3769:3932   */\n    tag_96:\n        /* \"#utility.yul\":3909:3924   */\n      0x556e617574686f72697a65642e00000000000000000000000000000000000000\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3897:3903   */\n      dup3\n        /* \"#utility.yul\":3893:3907   */\n      add\n        /* \"#utility.yul\":3886:3925   */\n      mstore\n        /* \"#utility.yul\":3769:3932   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3938:4304   */\n    tag_97:\n        /* \"#utility.yul\":4080:4083   */\n      0x00\n        /* \"#utility.yul\":4101:4168   */\n      tag_151\n        /* \"#utility.yul\":4165:4167   */\n      0x0d\n        /* \"#utility.yul\":4160:4163   */\n      dup4\n        /* \"#utility.yul\":4101:4168   */\n      tag_95\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4094:4168   */\n      swap2\n      pop\n        /* \"#utility.yul\":4177:4270   */\n      tag_152\n        /* \"#utility.yul\":4266:4269   */\n      dup3\n        /* \"#utility.yul\":4177:4270   */\n      tag_96\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4295:4297   */\n      0x20\n        /* \"#utility.yul\":4290:4293   */\n      dup3\n        /* \"#utility.yul\":4286:4298   */\n      add\n        /* \"#utility.yul\":4279:4298   */\n      swap1\n      pop\n        /* \"#utility.yul\":3938:4304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4310:4729   */\n    tag_33:\n        /* \"#utility.yul\":4476:4480   */\n      0x00\n        /* \"#utility.yul\":4514:4516   */\n      0x20\n        /* \"#utility.yul\":4503:4512   */\n      dup3\n        /* \"#utility.yul\":4499:4517   */\n      add\n        /* \"#utility.yul\":4491:4517   */\n      swap1\n      pop\n        /* \"#utility.yul\":4563:4572   */\n      dup2\n        /* \"#utility.yul\":4557:4561   */\n      dup2\n        /* \"#utility.yul\":4553:4573   */\n      sub\n        /* \"#utility.yul\":4549:4550   */\n      0x00\n        /* \"#utility.yul\":4538:4547   */\n      dup4\n        /* \"#utility.yul\":4534:4551   */\n      add\n        /* \"#utility.yul\":4527:4574   */\n      mstore\n        /* \"#utility.yul\":4591:4722   */\n      tag_154\n        /* \"#utility.yul\":4717:4721   */\n      dup2\n        /* \"#utility.yul\":4591:4722   */\n      tag_97\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4583:4722   */\n      swap1\n      pop\n        /* \"#utility.yul\":4310:4729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4735:4962   */\n    tag_98:\n        /* \"#utility.yul\":4875:4909   */\n      0x5265717565737420697320696e76616c6964206f7220616c7265616479206675\n        /* \"#utility.yul\":4871:4872   */\n      0x00\n        /* \"#utility.yul\":4863:4869   */\n      dup3\n        /* \"#utility.yul\":4859:4873   */\n      add\n        /* \"#utility.yul\":4852:4910   */\n      mstore\n        /* \"#utility.yul\":4944:4954   */\n      0x6c66696c6c65642e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4939:4941   */\n      0x20\n        /* \"#utility.yul\":4931:4937   */\n      dup3\n        /* \"#utility.yul\":4927:4942   */\n      add\n        /* \"#utility.yul\":4920:4955   */\n      mstore\n        /* \"#utility.yul\":4735:4962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4968:5334   */\n    tag_99:\n        /* \"#utility.yul\":5110:5113   */\n      0x00\n        /* \"#utility.yul\":5131:5198   */\n      tag_157\n        /* \"#utility.yul\":5195:5197   */\n      0x28\n        /* \"#utility.yul\":5190:5193   */\n      dup4\n        /* \"#utility.yul\":5131:5198   */\n      tag_95\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5124:5198   */\n      swap2\n      pop\n        /* \"#utility.yul\":5207:5300   */\n      tag_158\n        /* \"#utility.yul\":5296:5299   */\n      dup3\n        /* \"#utility.yul\":5207:5300   */\n      tag_98\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":5325:5327   */\n      0x40\n        /* \"#utility.yul\":5320:5323   */\n      dup3\n        /* \"#utility.yul\":5316:5328   */\n      add\n        /* \"#utility.yul\":5309:5328   */\n      swap1\n      pop\n        /* \"#utility.yul\":4968:5334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5340:5759   */\n    tag_37:\n        /* \"#utility.yul\":5506:5510   */\n      0x00\n        /* \"#utility.yul\":5544:5546   */\n      0x20\n        /* \"#utility.yul\":5533:5542   */\n      dup3\n        /* \"#utility.yul\":5529:5547   */\n      add\n        /* \"#utility.yul\":5521:5547   */\n      swap1\n      pop\n        /* \"#utility.yul\":5593:5602   */\n      dup2\n        /* \"#utility.yul\":5587:5591   */\n      dup2\n        /* \"#utility.yul\":5583:5603   */\n      sub\n        /* \"#utility.yul\":5579:5580   */\n      0x00\n        /* \"#utility.yul\":5568:5577   */\n      dup4\n        /* \"#utility.yul\":5564:5581   */\n      add\n        /* \"#utility.yul\":5557:5604   */\n      mstore\n        /* \"#utility.yul\":5621:5752   */\n      tag_160\n        /* \"#utility.yul\":5747:5751   */\n      dup2\n        /* \"#utility.yul\":5621:5752   */\n      tag_99\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5613:5752   */\n      swap1\n      pop\n        /* \"#utility.yul\":5340:5759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5765:5883   */\n    tag_100:\n        /* \"#utility.yul\":5852:5876   */\n      tag_162\n        /* \"#utility.yul\":5870:5875   */\n      dup2\n        /* \"#utility.yul\":5852:5876   */\n      tag_85\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":5847:5850   */\n      dup3\n        /* \"#utility.yul\":5840:5877   */\n      mstore\n        /* \"#utility.yul\":5765:5883   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5889:6331   */\n    tag_39:\n        /* \"#utility.yul\":6038:6042   */\n      0x00\n        /* \"#utility.yul\":6076:6078   */\n      0x60\n        /* \"#utility.yul\":6065:6074   */\n      dup3\n        /* \"#utility.yul\":6061:6079   */\n      add\n        /* \"#utility.yul\":6053:6079   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6160   */\n      tag_164\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6146:6155   */\n      dup4\n        /* \"#utility.yul\":6142:6159   */\n      add\n        /* \"#utility.yul\":6133:6139   */\n      dup7\n        /* \"#utility.yul\":6089:6160   */\n      tag_100\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6170:6242   */\n      tag_165\n        /* \"#utility.yul\":6238:6240   */\n      0x20\n        /* \"#utility.yul\":6227:6236   */\n      dup4\n        /* \"#utility.yul\":6223:6241   */\n      add\n        /* \"#utility.yul\":6214:6220   */\n      dup6\n        /* \"#utility.yul\":6170:6242   */\n      tag_100\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6252:6324   */\n      tag_166\n        /* \"#utility.yul\":6320:6322   */\n      0x40\n        /* \"#utility.yul\":6309:6318   */\n      dup4\n        /* \"#utility.yul\":6305:6323   */\n      add\n        /* \"#utility.yul\":6296:6302   */\n      dup5\n        /* \"#utility.yul\":6252:6324   */\n      tag_100\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5889:6331   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6337:6510   */\n    tag_101:\n        /* \"#utility.yul\":6477:6502   */\n      0x4f7261636c65206e6f7420696e697469616c697a65642e000000000000000000\n        /* \"#utility.yul\":6473:6474   */\n      0x00\n        /* \"#utility.yul\":6465:6471   */\n      dup3\n        /* \"#utility.yul\":6461:6475   */\n      add\n        /* \"#utility.yul\":6454:6503   */\n      mstore\n        /* \"#utility.yul\":6337:6510   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6516:6882   */\n    tag_102:\n        /* \"#utility.yul\":6658:6661   */\n      0x00\n        /* \"#utility.yul\":6679:6746   */\n      tag_169\n        /* \"#utility.yul\":6743:6745   */\n      0x17\n        /* \"#utility.yul\":6738:6741   */\n      dup4\n        /* \"#utility.yul\":6679:6746   */\n      tag_95\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6672:6746   */\n      swap2\n      pop\n        /* \"#utility.yul\":6755:6848   */\n      tag_170\n        /* \"#utility.yul\":6844:6847   */\n      dup3\n        /* \"#utility.yul\":6755:6848   */\n      tag_101\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6873:6875   */\n      0x20\n        /* \"#utility.yul\":6868:6871   */\n      dup3\n        /* \"#utility.yul\":6864:6876   */\n      add\n        /* \"#utility.yul\":6857:6876   */\n      swap1\n      pop\n        /* \"#utility.yul\":6516:6882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6888:7307   */\n    tag_45:\n        /* \"#utility.yul\":7054:7058   */\n      0x00\n        /* \"#utility.yul\":7092:7094   */\n      0x20\n        /* \"#utility.yul\":7081:7090   */\n      dup3\n        /* \"#utility.yul\":7077:7095   */\n      add\n        /* \"#utility.yul\":7069:7095   */\n      swap1\n      pop\n        /* \"#utility.yul\":7141:7150   */\n      dup2\n        /* \"#utility.yul\":7135:7139   */\n      dup2\n        /* \"#utility.yul\":7131:7151   */\n      sub\n        /* \"#utility.yul\":7127:7128   */\n      0x00\n        /* \"#utility.yul\":7116:7125   */\n      dup4\n        /* \"#utility.yul\":7112:7129   */\n      add\n        /* \"#utility.yul\":7105:7152   */\n      mstore\n        /* \"#utility.yul\":7169:7300   */\n      tag_172\n        /* \"#utility.yul\":7295:7299   */\n      dup2\n        /* \"#utility.yul\":7169:7300   */\n      tag_102\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7161:7300   */\n      swap1\n      pop\n        /* \"#utility.yul\":6888:7307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7313:7493   */\n    tag_103:\n        /* \"#utility.yul\":7361:7438   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7358:7359   */\n      0x00\n        /* \"#utility.yul\":7351:7439   */\n      mstore\n        /* \"#utility.yul\":7458:7462   */\n      0x11\n        /* \"#utility.yul\":7455:7456   */\n      0x04\n        /* \"#utility.yul\":7448:7463   */\n      mstore\n        /* \"#utility.yul\":7482:7486   */\n      0x24\n        /* \"#utility.yul\":7479:7480   */\n      0x00\n        /* \"#utility.yul\":7472:7487   */\n      revert\n        /* \"#utility.yul\":7499:7690   */\n    tag_47:\n        /* \"#utility.yul\":7539:7542   */\n      0x00\n        /* \"#utility.yul\":7558:7578   */\n      tag_175\n        /* \"#utility.yul\":7576:7577   */\n      dup3\n        /* \"#utility.yul\":7558:7578   */\n      tag_85\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7553:7578   */\n      swap2\n      pop\n        /* \"#utility.yul\":7592:7612   */\n      tag_176\n        /* \"#utility.yul\":7610:7611   */\n      dup4\n        /* \"#utility.yul\":7592:7612   */\n      tag_85\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":7587:7612   */\n      swap3\n      pop\n        /* \"#utility.yul\":7635:7636   */\n      dup3\n        /* \"#utility.yul\":7632:7633   */\n      dup3\n        /* \"#utility.yul\":7628:7637   */\n      add\n        /* \"#utility.yul\":7621:7637   */\n      swap1\n      pop\n        /* \"#utility.yul\":7656:7659   */\n      dup1\n        /* \"#utility.yul\":7653:7654   */\n      dup3\n        /* \"#utility.yul\":7650:7660   */\n      gt\n        /* \"#utility.yul\":7647:7683   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":7663:7681   */\n      tag_178\n      tag_103\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7647:7683   */\n    tag_177:\n        /* \"#utility.yul\":7499:7690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7696:7839   */\n    tag_104:\n        /* \"#utility.yul\":7753:7758   */\n      0x00\n        /* \"#utility.yul\":7784:7790   */\n      dup2\n        /* \"#utility.yul\":7778:7791   */\n      mload\n        /* \"#utility.yul\":7769:7791   */\n      swap1\n      pop\n        /* \"#utility.yul\":7800:7833   */\n      tag_180\n        /* \"#utility.yul\":7827:7832   */\n      dup2\n        /* \"#utility.yul\":7800:7833   */\n      tag_86\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7696:7839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7845:8196   */\n    tag_52:\n        /* \"#utility.yul\":7915:7921   */\n      0x00\n        /* \"#utility.yul\":7964:7966   */\n      0x20\n        /* \"#utility.yul\":7952:7961   */\n      dup3\n        /* \"#utility.yul\":7943:7950   */\n      dup5\n        /* \"#utility.yul\":7939:7962   */\n      sub\n        /* \"#utility.yul\":7935:7967   */\n      slt\n        /* \"#utility.yul\":7932:8051   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":7970:8049   */\n      tag_183\n      tag_83\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7932:8051   */\n    tag_182:\n        /* \"#utility.yul\":8090:8091   */\n      0x00\n        /* \"#utility.yul\":8115:8179   */\n      tag_184\n        /* \"#utility.yul\":8171:8178   */\n      dup5\n        /* \"#utility.yul\":8162:8168   */\n      dup3\n        /* \"#utility.yul\":8151:8160   */\n      dup6\n        /* \"#utility.yul\":8147:8169   */\n      add\n        /* \"#utility.yul\":8115:8179   */\n      tag_104\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":8105:8179   */\n      swap2\n      pop\n        /* \"#utility.yul\":8061:8189   */\n      pop\n        /* \"#utility.yul\":7845:8196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8202:8424   */\n    tag_54:\n        /* \"#utility.yul\":8295:8299   */\n      0x00\n        /* \"#utility.yul\":8333:8335   */\n      0x20\n        /* \"#utility.yul\":8322:8331   */\n      dup3\n        /* \"#utility.yul\":8318:8336   */\n      add\n        /* \"#utility.yul\":8310:8336   */\n      swap1\n      pop\n        /* \"#utility.yul\":8346:8417   */\n      tag_186\n        /* \"#utility.yul\":8414:8415   */\n      0x00\n        /* \"#utility.yul\":8403:8412   */\n      dup4\n        /* \"#utility.yul\":8399:8416   */\n      add\n        /* \"#utility.yul\":8390:8396   */\n      dup5\n        /* \"#utility.yul\":8346:8417   */\n      tag_100\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8202:8424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8430:8655   */\n    tag_105:\n        /* \"#utility.yul\":8570:8604   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8566:8567   */\n      0x00\n        /* \"#utility.yul\":8558:8564   */\n      dup3\n        /* \"#utility.yul\":8554:8568   */\n      add\n        /* \"#utility.yul\":8547:8605   */\n      mstore\n        /* \"#utility.yul\":8639:8647   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8634:8636   */\n      0x20\n        /* \"#utility.yul\":8626:8632   */\n      dup3\n        /* \"#utility.yul\":8622:8637   */\n      add\n        /* \"#utility.yul\":8615:8648   */\n      mstore\n        /* \"#utility.yul\":8430:8655   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8661:9027   */\n    tag_106:\n        /* \"#utility.yul\":8803:8806   */\n      0x00\n        /* \"#utility.yul\":8824:8891   */\n      tag_189\n        /* \"#utility.yul\":8888:8890   */\n      0x26\n        /* \"#utility.yul\":8883:8886   */\n      dup4\n        /* \"#utility.yul\":8824:8891   */\n      tag_95\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":8817:8891   */\n      swap2\n      pop\n        /* \"#utility.yul\":8900:8993   */\n      tag_190\n        /* \"#utility.yul\":8989:8992   */\n      dup3\n        /* \"#utility.yul\":8900:8993   */\n      tag_105\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":9018:9020   */\n      0x40\n        /* \"#utility.yul\":9013:9016   */\n      dup3\n        /* \"#utility.yul\":9009:9021   */\n      add\n        /* \"#utility.yul\":9002:9021   */\n      swap1\n      pop\n        /* \"#utility.yul\":8661:9027   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9033:9452   */\n    tag_71:\n        /* \"#utility.yul\":9199:9203   */\n      0x00\n        /* \"#utility.yul\":9237:9239   */\n      0x20\n        /* \"#utility.yul\":9226:9235   */\n      dup3\n        /* \"#utility.yul\":9222:9240   */\n      add\n        /* \"#utility.yul\":9214:9240   */\n      swap1\n      pop\n        /* \"#utility.yul\":9286:9295   */\n      dup2\n        /* \"#utility.yul\":9280:9284   */\n      dup2\n        /* \"#utility.yul\":9276:9296   */\n      sub\n        /* \"#utility.yul\":9272:9273   */\n      0x00\n        /* \"#utility.yul\":9261:9270   */\n      dup4\n        /* \"#utility.yul\":9257:9274   */\n      add\n        /* \"#utility.yul\":9250:9297   */\n      mstore\n        /* \"#utility.yul\":9314:9445   */\n      tag_192\n        /* \"#utility.yul\":9440:9444   */\n      dup2\n        /* \"#utility.yul\":9314:9445   */\n      tag_106\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":9306:9445   */\n      swap1\n      pop\n        /* \"#utility.yul\":9033:9452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9458:9640   */\n    tag_107:\n        /* \"#utility.yul\":9598:9632   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9594:9595   */\n      0x00\n        /* \"#utility.yul\":9586:9592   */\n      dup3\n        /* \"#utility.yul\":9582:9596   */\n      add\n        /* \"#utility.yul\":9575:9633   */\n      mstore\n        /* \"#utility.yul\":9458:9640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9646:10012   */\n    tag_108:\n        /* \"#utility.yul\":9788:9791   */\n      0x00\n        /* \"#utility.yul\":9809:9876   */\n      tag_195\n        /* \"#utility.yul\":9873:9875   */\n      0x20\n        /* \"#utility.yul\":9868:9871   */\n      dup4\n        /* \"#utility.yul\":9809:9876   */\n      tag_95\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":9802:9876   */\n      swap2\n      pop\n        /* \"#utility.yul\":9885:9978   */\n      tag_196\n        /* \"#utility.yul\":9974:9977   */\n      dup3\n        /* \"#utility.yul\":9885:9978   */\n      tag_107\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":10003:10005   */\n      0x20\n        /* \"#utility.yul\":9998:10001   */\n      dup3\n        /* \"#utility.yul\":9994:10006   */\n      add\n        /* \"#utility.yul\":9987:10006   */\n      swap1\n      pop\n        /* \"#utility.yul\":9646:10012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10018:10437   */\n    tag_79:\n        /* \"#utility.yul\":10184:10188   */\n      0x00\n        /* \"#utility.yul\":10222:10224   */\n      0x20\n        /* \"#utility.yul\":10211:10220   */\n      dup3\n        /* \"#utility.yul\":10207:10225   */\n      add\n        /* \"#utility.yul\":10199:10225   */\n      swap1\n      pop\n        /* \"#utility.yul\":10271:10280   */\n      dup2\n        /* \"#utility.yul\":10265:10269   */\n      dup2\n        /* \"#utility.yul\":10261:10281   */\n      sub\n        /* \"#utility.yul\":10257:10258   */\n      0x00\n        /* \"#utility.yul\":10246:10255   */\n      dup4\n        /* \"#utility.yul\":10242:10259   */\n      add\n        /* \"#utility.yul\":10235:10282   */\n      mstore\n        /* \"#utility.yul\":10299:10430   */\n      tag_198\n        /* \"#utility.yul\":10425:10429   */\n      dup2\n        /* \"#utility.yul\":10299:10430   */\n      tag_108\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":10291:10430   */\n      swap1\n      pop\n        /* \"#utility.yul\":10018:10437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122009b914c8318db9ddae9e714fe7e147227fd14f75bcdfd0ba547bd980d9d364f364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 50,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c768061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306c04593146100675780632c8a752614610083578063715018a6146100a15780638da5cb5b146100ab578063deb93ef0146100c9578063f2fde38b146100e5575b600080fd5b610081600480360381019061007c9190610760565b610101565b005b61008b610293565b60405161009891906107f1565b60405180910390f35b6100a961047e565b005b6100b3610492565b6040516100c0919061084d565b60405180910390f35b6100e360048036038101906100de9190610894565b6104bb565b005b6100ff60048036038101906100fa9190610894565b61053e565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610191576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101889061091e565b60405180910390fd5b6002600082815260200190815260200160002060009054906101000a900460ff166101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e8906109b0565b60405180910390fd5b6040518060400160405280848152602001838152506003600083815260200190815260200160002060008201518160000155602082015181600101559050506002600082815260200190815260200160002060006101000a81549060ff02191690557fac692744937aaf6b0bdbd8e64a6994b068c12dcf93bf43bf34e349496317f729838383604051610286939291906109df565b60405180910390a1505050565b61029b61070b565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361032c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032390610a62565b60405180910390fd5b61025860045461033c9190610ab1565b4211610445576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe66d9df6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190610afa565b905060016002600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe99dd399072a7d799ffff8860fe4ea02424a7301da2e2f2c3efc7ffcfafe4819816040516104349190610b27565b60405180910390a180600581905550505b60036000600554815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905090565b6104866105c1565b610490600061063f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104c36105c1565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe420b96152542f57ce3d2d26d939a3c2860a82361801ad0a970a3badc32d538e81604051610533919061084d565b60405180910390a150565b6105466105c1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90610bb4565b60405180910390fd5b6105be8161063f565b50565b6105c9610703565b73ffffffffffffffffffffffffffffffffffffffff166105e7610492565b73ffffffffffffffffffffffffffffffffffffffff161461063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490610c20565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060008152602001600081525090565b600080fd5b6000819050919050565b61073d8161072a565b811461074857600080fd5b50565b60008135905061075a81610734565b92915050565b60008060006060848603121561077957610778610725565b5b60006107878682870161074b565b93505060206107988682870161074b565b92505060406107a98682870161074b565b9150509250925092565b6107bc8161072a565b82525050565b6040820160008201516107d860008501826107b3565b5060208201516107eb60208501826107b3565b50505050565b600060408201905061080660008301846107c2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108378261080c565b9050919050565b6108478161082c565b82525050565b6000602082019050610862600083018461083e565b92915050565b6108718161082c565b811461087c57600080fd5b50565b60008135905061088e81610868565b92915050565b6000602082840312156108aa576108a9610725565b5b60006108b88482850161087f565b91505092915050565b600082825260208201905092915050565b7f556e617574686f72697a65642e00000000000000000000000000000000000000600082015250565b6000610908600d836108c1565b9150610913826108d2565b602082019050919050565b60006020820190508181036000830152610937816108fb565b9050919050565b7f5265717565737420697320696e76616c6964206f7220616c726561647920667560008201527f6c66696c6c65642e000000000000000000000000000000000000000000000000602082015250565b600061099a6028836108c1565b91506109a58261093e565b604082019050919050565b600060208201905081810360008301526109c98161098d565b9050919050565b6109d98161072a565b82525050565b60006060820190506109f460008301866109d0565b610a0160208301856109d0565b610a0e60408301846109d0565b949350505050565b7f4f7261636c65206e6f7420696e697469616c697a65642e000000000000000000600082015250565b6000610a4c6017836108c1565b9150610a5782610a16565b602082019050919050565b60006020820190508181036000830152610a7b81610a3f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610abc8261072a565b9150610ac78361072a565b9250828201905080821115610adf57610ade610a82565b5b92915050565b600081519050610af481610734565b92915050565b600060208284031215610b1057610b0f610725565b5b6000610b1e84828501610ae5565b91505092915050565b6000602082019050610b3c60008301846109d0565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b9e6026836108c1565b9150610ba982610b42565b604082019050919050565b60006020820190508181036000830152610bcd81610b91565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c0a6020836108c1565b9150610c1582610bd4565b602082019050919050565b60006020820190508181036000830152610c3981610bfd565b905091905056fea264697066735822122009b914c8318db9ddae9e714fe7e147227fd14f75bcdfd0ba547bd980d9d364f364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC76 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C04593 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2C8A7526 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xDEB93EF0 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0x47E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB3 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8 SWAP1 PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH32 0xAC692744937AAF6B0BDBD8E64A6994B068C12DCF93BF43BF34E349496317F729 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x286 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x29B PUSH2 0x70B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x32C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x323 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x258 PUSH1 0x4 SLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xAB1 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x445 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFE66D9DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xE99DD399072A7D799FFFF8860FE4EA02424A7301DA2E2F2C3EFC7FFCFAFE4819 DUP2 PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x486 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x490 PUSH1 0x0 PUSH2 0x63F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x5C1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xE420B96152542F57CE3D2D26D939A3C2860A82361801AD0A970A3BADC32D538E DUP2 PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x546 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP1 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BE DUP2 PUSH2 0x63F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x703 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E7 PUSH2 0x492 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0x72A JUMP JUMPDEST DUP2 EQ PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x75A DUP2 PUSH2 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x779 JUMPI PUSH2 0x778 PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x787 DUP7 DUP3 DUP8 ADD PUSH2 0x74B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x798 DUP7 DUP3 DUP8 ADD PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x7A9 DUP7 DUP3 DUP8 ADD PUSH2 0x74B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x7BC DUP2 PUSH2 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x7D8 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x7B3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7EB PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x7B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x806 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x837 DUP3 PUSH2 0x80C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x847 DUP2 PUSH2 0x82C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x862 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x83E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x871 DUP2 PUSH2 0x82C JUMP JUMPDEST DUP2 EQ PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x88E DUP2 PUSH2 0x868 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AA JUMPI PUSH2 0x8A9 PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8B8 DUP5 DUP3 DUP6 ADD PUSH2 0x87F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E617574686F72697A65642E00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 PUSH1 0xD DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x913 DUP3 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x937 DUP2 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320696E76616C6964206F7220616C7265616479206675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C66696C6C65642E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99A PUSH1 0x28 DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A5 DUP3 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C9 DUP2 PUSH2 0x98D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D9 DUP2 PUSH2 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9F4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0xA01 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0xA0E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F7261636C65206E6F7420696E697469616C697A65642E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4C PUSH1 0x17 DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA7B DUP2 PUSH2 0xA3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xABC DUP3 PUSH2 0x72A JUMP JUMPDEST SWAP2 POP PUSH2 0xAC7 DUP4 PUSH2 0x72A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0xA82 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAF4 DUP2 PUSH2 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB0F PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1E DUP5 DUP3 DUP6 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9E PUSH1 0x26 DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA9 DUP3 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBCD DUP2 PUSH2 0xB91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0A PUSH1 0x20 DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0xC15 DUP3 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC39 DUP2 PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xB9 EQ 0xC8 BALANCE DUP14 0xB9 0xDD 0xAE SWAP15 PUSH18 0x4FE7E147227FD14F75BCDFD0BA547BD980D9 0xD3 PUSH5 0xF364736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "154:1753:2:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;154:1753:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;154:1753:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1473,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 1795,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1599,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@fulfillElectricityDataRequest_284": {
									"entryPoint": 257,
									"id": 284,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@getElectricityData_245": {
									"entryPoint": 659,
									"id": 245,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 1170,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1150,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setElectricityOracleAddress_194": {
									"entryPoint": 1211,
									"id": 194,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 1342,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ElectricityData_$161_memory_ptr_to_t_struct$_ElectricityData_$161_memory_ptr_fromStack": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ElectricityData_$161_memory_ptr__to_t_struct$_ElectricityData_$161_memory_ptr__fromStack_reversed": {
									"entryPoint": 2033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e": {
									"entryPoint": 2258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10440:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:4"
															},
															"nodeType": "YulIf",
															"src": "470:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:4",
														"type": ""
													}
												],
												"src": "417:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:4",
														"type": ""
													}
												],
												"src": "545:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "790:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "836:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "832:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:32:4"
															},
															"nodeType": "YulIf",
															"src": "800:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "929:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "948:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "973:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1056:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1101:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1184:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1229:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "744:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "755:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "767:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "775:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "783:6:4",
														"type": ""
													}
												],
												"src": "690:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1370:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1387:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1410:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1392:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1380:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1358:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1365:3:4",
														"type": ""
													}
												],
												"src": "1315:108:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:409:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1639:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1655:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1660:4:4",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1651:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:14:4"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "1643:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1675:175:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1721:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1751:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1758:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1747:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1747:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1741:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1741:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1725:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1811:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1829:3:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1834:4:4",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1777:33:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1777:63:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1777:63:4"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1860:171:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1902:43:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1932:5:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1939:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1928:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1928:16:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1922:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1922:23:4"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "1906:12:4",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "1992:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "2010:3:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2015:4:4",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2006:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2006:14:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1958:33:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1958:63:4"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1958:63:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ElectricityData_$161_memory_ptr_to_t_struct$_ElectricityData_$161_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1616:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1623:3:4",
														"type": ""
													}
												],
												"src": "1499:539:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2206:188:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2216:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2228:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2239:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2224:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2224:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2216:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2373:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2369:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ElectricityData_$161_memory_ptr_to_t_struct$_ElectricityData_$161_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2252:107:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:135:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2252:135:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ElectricityData_$161_memory_ptr__to_t_struct$_ElectricityData_$161_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2178:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2190:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2201:4:4",
														"type": ""
													}
												],
												"src": "2044:350:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2445:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2455:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2470:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2477:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2466:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2455:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2427:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2437:7:4",
														"type": ""
													}
												],
												"src": "2400:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2577:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2587:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2616:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2598:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2587:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2559:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2569:7:4",
														"type": ""
													}
												],
												"src": "2532:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2699:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2716:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2739:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2721:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2721:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2709:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2687:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2694:3:4",
														"type": ""
													}
												],
												"src": "2634:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2856:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2866:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2878:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2889:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2874:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2874:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2866:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2946:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2959:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2970:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2955:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2955:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2902:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2902:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2902:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2828:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2840:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2851:4:4",
														"type": ""
													}
												],
												"src": "2758:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3086:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3095:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3098:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3088:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3088:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3088:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3052:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3077:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3059:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3059:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3049:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3049:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3042:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3042:43:4"
															},
															"nodeType": "YulIf",
															"src": "3039:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3022:5:4",
														"type": ""
													}
												],
												"src": "2986:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3166:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3176:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3198:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3185:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3176:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3241:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3214:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3214:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3214:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3144:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3152:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3160:5:4",
														"type": ""
													}
												],
												"src": "3114:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3371:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3373:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3373:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3373:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3346:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3342:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3367:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3338:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:32:4"
															},
															"nodeType": "YulIf",
															"src": "3335:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3464:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3479:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3493:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3483:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3508:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3543:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3554:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3539:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3539:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3563:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3518:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3518:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3508:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3295:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3306:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3318:6:4",
														"type": ""
													}
												],
												"src": "3259:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3690:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3707:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3712:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3700:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3700:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3728:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3752:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3743:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3728:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3662:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3667:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3678:11:4",
														"type": ""
													}
												],
												"src": "3594:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3875:57:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3897:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3905:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3893:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3893:14:4"
																	},
																	{
																		"hexValue": "556e617574686f72697a65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3909:15:4",
																		"type": "",
																		"value": "Unauthorized."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3886:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3886:39:4"
														}
													]
												},
												"name": "store_literal_in_memory_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3867:6:4",
														"type": ""
													}
												],
												"src": "3769:163:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4084:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4094:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4165:2:4",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4094:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4266:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
																	"nodeType": "YulIdentifier",
																	"src": "4177:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4177:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4279:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4290:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4286:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4279:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4072:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4080:3:4",
														"type": ""
													}
												],
												"src": "3938:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4481:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4491:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4503:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4514:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4499:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4499:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4491:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4538:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4549:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4534:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4534:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4557:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4563:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4553:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4553:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4527:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4527:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4527:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4583:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4717:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4591:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4583:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4461:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4476:4:4",
														"type": ""
													}
												],
												"src": "4310:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4841:121:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4863:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4871:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4859:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4859:14:4"
																	},
																	{
																		"hexValue": "5265717565737420697320696e76616c6964206f7220616c7265616479206675",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4875:34:4",
																		"type": "",
																		"value": "Request is invalid or already fu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4852:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4852:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4852:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4931:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4939:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4927:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4927:15:4"
																	},
																	{
																		"hexValue": "6c66696c6c65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4944:10:4",
																		"type": "",
																		"value": "lfilled."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4920:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4920:35:4"
														}
													]
												},
												"name": "store_literal_in_memory_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4833:6:4",
														"type": ""
													}
												],
												"src": "4735:227:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5114:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5124:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5190:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:4",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5131:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5131:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5124:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5296:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b",
																	"nodeType": "YulIdentifier",
																	"src": "5207:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5309:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5320:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5325:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5316:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5316:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5309:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5102:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5110:3:4",
														"type": ""
													}
												],
												"src": "4968:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5511:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5521:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5533:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5544:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5529:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5521:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5568:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5579:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5564:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5564:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5587:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5593:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5583:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5557:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5557:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5557:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5613:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5747:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5621:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5621:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5613:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5491:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5506:4:4",
														"type": ""
													}
												],
												"src": "5340:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5830:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5847:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5870:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5852:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5852:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5840:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5840:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5818:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5825:3:4",
														"type": ""
													}
												],
												"src": "5765:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6043:288:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6053:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6065:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6076:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6061:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6061:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6053:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6133:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6146:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6157:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6142:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6089:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6089:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6089:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6214:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6227:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6238:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6223:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6223:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6170:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6170:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6296:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6309:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6320:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6305:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6305:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6252:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:72:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6252:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5999:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6011:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6019:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6027:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6038:4:4",
														"type": ""
													}
												],
												"src": "5889:442:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6443:67:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6465:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6473:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6461:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6461:14:4"
																	},
																	{
																		"hexValue": "4f7261636c65206e6f7420696e697469616c697a65642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6477:25:4",
																		"type": "",
																		"value": "Oracle not initialized."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6454:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6454:49:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6454:49:4"
														}
													]
												},
												"name": "store_literal_in_memory_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6435:6:4",
														"type": ""
													}
												],
												"src": "6337:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6662:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6672:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6738:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6743:2:4",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6679:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6679:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6672:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6844:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5",
																	"nodeType": "YulIdentifier",
																	"src": "6755:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6755:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6755:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6857:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6868:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6873:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6864:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6864:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6857:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6650:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6658:3:4",
														"type": ""
													}
												],
												"src": "6516:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7059:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7069:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7081:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7092:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7077:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7069:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7116:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7127:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7112:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7112:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7135:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7141:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7131:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7131:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7105:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7105:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7161:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7295:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7169:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7169:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7161:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7039:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7054:4:4",
														"type": ""
													}
												],
												"src": "6888:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7341:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7358:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7361:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7351:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7351:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7351:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7455:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7458:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7448:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7448:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7448:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7479:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7482:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7472:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7472:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7472:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7313:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7543:147:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7553:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7576:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7558:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7558:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7553:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7587:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7610:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7592:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7587:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7621:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7632:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7635:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7628:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7628:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7621:3:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7661:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7663:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7663:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7663:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7653:1:4"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7656:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7650:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:10:4"
															},
															"nodeType": "YulIf",
															"src": "7647:36:4"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7530:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7533:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7539:3:4",
														"type": ""
													}
												],
												"src": "7499:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7759:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7778:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "7769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7800:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7800:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7800:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7753:5:4",
														"type": ""
													}
												],
												"src": "7696:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7922:274:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7970:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7970:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7939:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7939:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7935:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7935:32:4"
															},
															"nodeType": "YulIf",
															"src": "7932:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "8061:128:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8076:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8151:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8147:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8115:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7915:6:4",
														"type": ""
													}
												],
												"src": "7845:351:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8300:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8310:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8322:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8333:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8318:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8318:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8310:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8390:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8403:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8414:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8399:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8346:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8346:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8346:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8272:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8284:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8295:4:4",
														"type": ""
													}
												],
												"src": "8202:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8536:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8558:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8566:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8554:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8554:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8570:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8547:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8547:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8547:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8626:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8634:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8622:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8622:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8639:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8615:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8615:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8615:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8528:6:4",
														"type": ""
													}
												],
												"src": "8430:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8807:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8817:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8883:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8888:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8824:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8824:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8817:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8989:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "8900:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8900:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9002:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9013:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9018:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9009:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9009:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9002:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8795:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8803:3:4",
														"type": ""
													}
												],
												"src": "8661:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9204:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9214:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9226:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9237:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9222:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9222:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9214:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9261:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9272:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9257:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9257:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9280:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9286:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9276:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9276:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9250:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9250:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9250:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9306:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9440:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9314:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9314:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9306:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9184:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9199:4:4",
														"type": ""
													}
												],
												"src": "9033:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9564:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9586:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9594:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9582:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9582:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9598:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9575:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9575:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9575:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9556:6:4",
														"type": ""
													}
												],
												"src": "9458:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9792:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9802:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9868:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9873:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9809:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9809:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9802:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9974:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "9885:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9885:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9987:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9998:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10003:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9994:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9994:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9987:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9780:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9788:3:4",
														"type": ""
													}
												],
												"src": "9646:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10189:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10199:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10211:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10222:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10207:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10207:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10199:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10246:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10257:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10242:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10242:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10265:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10271:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10261:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10261:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10235:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10235:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10235:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10291:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10425:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10299:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10299:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10291:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10169:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10184:4:4",
														"type": ""
													}
												],
												"src": "10018:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Caller.ElectricityData -> struct Caller.ElectricityData\n    function abi_encode_t_struct$_ElectricityData_$161_memory_ptr_to_t_struct$_ElectricityData_$161_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // carbonIntensity\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // priceCarbon\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ElectricityData_$161_memory_ptr__to_t_struct$_ElectricityData_$161_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_struct$_ElectricityData_$161_memory_ptr_to_t_struct$_ElectricityData_$161_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unauthorized.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Request is invalid or already fu\")\n\n        mstore(add(memPtr, 32), \"lfilled.\")\n\n    }\n\n    function abi_encode_t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Oracle not initialized.\")\n\n    }\n\n    function abi_encode_t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806306c04593146100675780632c8a752614610083578063715018a6146100a15780638da5cb5b146100ab578063deb93ef0146100c9578063f2fde38b146100e5575b600080fd5b610081600480360381019061007c9190610760565b610101565b005b61008b610293565b60405161009891906107f1565b60405180910390f35b6100a961047e565b005b6100b3610492565b6040516100c0919061084d565b60405180910390f35b6100e360048036038101906100de9190610894565b6104bb565b005b6100ff60048036038101906100fa9190610894565b61053e565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610191576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101889061091e565b60405180910390fd5b6002600082815260200190815260200160002060009054906101000a900460ff166101f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e8906109b0565b60405180910390fd5b6040518060400160405280848152602001838152506003600083815260200190815260200160002060008201518160000155602082015181600101559050506002600082815260200190815260200160002060006101000a81549060ff02191690557fac692744937aaf6b0bdbd8e64a6994b068c12dcf93bf43bf34e349496317f729838383604051610286939291906109df565b60405180910390a1505050565b61029b61070b565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361032c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032390610a62565b60405180910390fd5b61025860045461033c9190610ab1565b4211610445576000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fe66d9df6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156103b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d79190610afa565b905060016002600083815260200190815260200160002060006101000a81548160ff0219169083151502179055507fe99dd399072a7d799ffff8860fe4ea02424a7301da2e2f2c3efc7ffcfafe4819816040516104349190610b27565b60405180910390a180600581905550505b60036000600554815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050905090565b6104866105c1565b610490600061063f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104c36105c1565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe420b96152542f57ce3d2d26d939a3c2860a82361801ad0a970a3badc32d538e81604051610533919061084d565b60405180910390a150565b6105466105c1565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ac90610bb4565b60405180910390fd5b6105be8161063f565b50565b6105c9610703565b73ffffffffffffffffffffffffffffffffffffffff166105e7610492565b73ffffffffffffffffffffffffffffffffffffffff161461063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490610c20565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b604051806040016040528060008152602001600081525090565b600080fd5b6000819050919050565b61073d8161072a565b811461074857600080fd5b50565b60008135905061075a81610734565b92915050565b60008060006060848603121561077957610778610725565b5b60006107878682870161074b565b93505060206107988682870161074b565b92505060406107a98682870161074b565b9150509250925092565b6107bc8161072a565b82525050565b6040820160008201516107d860008501826107b3565b5060208201516107eb60208501826107b3565b50505050565b600060408201905061080660008301846107c2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108378261080c565b9050919050565b6108478161082c565b82525050565b6000602082019050610862600083018461083e565b92915050565b6108718161082c565b811461087c57600080fd5b50565b60008135905061088e81610868565b92915050565b6000602082840312156108aa576108a9610725565b5b60006108b88482850161087f565b91505092915050565b600082825260208201905092915050565b7f556e617574686f72697a65642e00000000000000000000000000000000000000600082015250565b6000610908600d836108c1565b9150610913826108d2565b602082019050919050565b60006020820190508181036000830152610937816108fb565b9050919050565b7f5265717565737420697320696e76616c6964206f7220616c726561647920667560008201527f6c66696c6c65642e000000000000000000000000000000000000000000000000602082015250565b600061099a6028836108c1565b91506109a58261093e565b604082019050919050565b600060208201905081810360008301526109c98161098d565b9050919050565b6109d98161072a565b82525050565b60006060820190506109f460008301866109d0565b610a0160208301856109d0565b610a0e60408301846109d0565b949350505050565b7f4f7261636c65206e6f7420696e697469616c697a65642e000000000000000000600082015250565b6000610a4c6017836108c1565b9150610a5782610a16565b602082019050919050565b60006020820190508181036000830152610a7b81610a3f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610abc8261072a565b9150610ac78361072a565b9250828201905080821115610adf57610ade610a82565b5b92915050565b600081519050610af481610734565b92915050565b600060208284031215610b1057610b0f610725565b5b6000610b1e84828501610ae5565b91505092915050565b6000602082019050610b3c60008301846109d0565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610b9e6026836108c1565b9150610ba982610b42565b604082019050919050565b60006020820190508181036000830152610bcd81610b91565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c0a6020836108c1565b9150610c1582610bd4565b602082019050919050565b60006020820190508181036000830152610c3981610bfd565b905091905056fea264697066735822122009b914c8318db9ddae9e714fe7e147227fd14f75bcdfd0ba547bd980d9d364f364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C04593 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2C8A7526 EQ PUSH2 0x83 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xDEB93EF0 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x760 JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8B PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x98 SWAP2 SWAP1 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH2 0x47E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB3 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x894 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x191 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8 SWAP1 PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP PUSH1 0x2 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH32 0xAC692744937AAF6B0BDBD8E64A6994B068C12DCF93BF43BF34E349496317F729 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x286 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x29B PUSH2 0x70B JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x32C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x323 SWAP1 PUSH2 0xA62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x258 PUSH1 0x4 SLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xAB1 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x445 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFE66D9DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xE99DD399072A7D799FFFF8860FE4EA02424A7301DA2E2F2C3EFC7FFCFAFE4819 DUP2 PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x486 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x490 PUSH1 0x0 PUSH2 0x63F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x4C3 PUSH2 0x5C1 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0xE420B96152542F57CE3D2D26D939A3C2860A82361801AD0A970A3BADC32D538E DUP2 PUSH1 0x40 MLOAD PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x546 PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5AC SWAP1 PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5BE DUP2 PUSH2 0x63F JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5C9 PUSH2 0x703 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E7 PUSH2 0x492 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0x72A JUMP JUMPDEST DUP2 EQ PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x75A DUP2 PUSH2 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x779 JUMPI PUSH2 0x778 PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x787 DUP7 DUP3 DUP8 ADD PUSH2 0x74B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x798 DUP7 DUP3 DUP8 ADD PUSH2 0x74B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x7A9 DUP7 DUP3 DUP8 ADD PUSH2 0x74B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x7BC DUP2 PUSH2 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x7D8 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x7B3 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7EB PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x7B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x806 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x837 DUP3 PUSH2 0x80C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x847 DUP2 PUSH2 0x82C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x862 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x83E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x871 DUP2 PUSH2 0x82C JUMP JUMPDEST DUP2 EQ PUSH2 0x87C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x88E DUP2 PUSH2 0x868 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AA JUMPI PUSH2 0x8A9 PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8B8 DUP5 DUP3 DUP6 ADD PUSH2 0x87F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E617574686F72697A65642E00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x908 PUSH1 0xD DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x913 DUP3 PUSH2 0x8D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x937 DUP2 PUSH2 0x8FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320696E76616C6964206F7220616C7265616479206675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C66696C6C65642E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99A PUSH1 0x28 DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A5 DUP3 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9C9 DUP2 PUSH2 0x98D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9D9 DUP2 PUSH2 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x9F4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0xA01 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x9D0 JUMP JUMPDEST PUSH2 0xA0E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F7261636C65206E6F7420696E697469616C697A65642E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4C PUSH1 0x17 DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0xA57 DUP3 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA7B DUP2 PUSH2 0xA3F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xABC DUP3 PUSH2 0x72A JUMP JUMPDEST SWAP2 POP PUSH2 0xAC7 DUP4 PUSH2 0x72A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0xA82 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xAF4 DUP2 PUSH2 0x734 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB10 JUMPI PUSH2 0xB0F PUSH2 0x725 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB1E DUP5 DUP3 DUP6 ADD PUSH2 0xAE5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB3C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x9D0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9E PUSH1 0x26 DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA9 DUP3 PUSH2 0xB42 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBCD DUP2 PUSH2 0xB91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC0A PUSH1 0x20 DUP4 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP PUSH2 0xC15 DUP3 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC39 DUP2 PUSH2 0xBFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0xB9 EQ 0xC8 BALANCE DUP14 0xB9 0xDD 0xAE SWAP15 PUSH18 0x4FE7E147227FD14F75BCDFD0BA547BD980D9 0xD3 PUSH5 0xF364736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "154:1753:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1326:382;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;833:487;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:191:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1326:382:2;576:17;;;;;;;;;;;554:40;;:10;:40;;;546:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1472:8:::1;:12;1481:2;1472:12;;;;;;;;;;;;;;;;;;;;;1464:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1554:45;;;;;;;;1570:15;1554:45;;;;1587:11;1554:45;;::::0;1540:7:::1;:11;1548:2;1540:11;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;1616:8;:12;1625:2;1616:12;;;;;;;;;;;;1609:19;;;;;;;;;;;1644:57;1668:15;1685:11;1698:2;1644:57;;;;;;;;:::i;:::-;;;;;;;;1326:382:::0;;;:::o;833:487::-;880:22;;:::i;:::-;970:1;922:51;;:17;;;;;;;;;;;:51;;;914:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1064:10;1035:26;;:39;;;;:::i;:::-;1016:15;:58;1012:267;;1104:10;1117:17;;;;;;;;;;;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1104:55;;1188:4;1173:8;:12;1182:2;1173:12;;;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;1212:28;1237:2;1212:28;;;;;;:::i;:::-;;;;;;;;1266:2;1255:8;:13;;;;1076:203;1012:267;1296:7;:17;1304:8;;1296:17;;;;;;;;;;;1289:24;;;;;;;;;;;;;;;;;;;;;;;;;;;833:487;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;636:191:2:-;1094:13:0;:11;:13::i;:::-;761:10:2::1;722:17;;:50;;;;;;;;;;;;;;;;;;788:32;809:10;788:32;;;;;;:::i;:::-;;;;;;;;636:191:::0;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;88:117:4:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:108::-;1392:24;1410:5;1392:24;:::i;:::-;1387:3;1380:37;1315:108;;:::o;1499:539::-;1660:4;1655:3;1651:14;1758:4;1751:5;1747:16;1741:23;1777:63;1834:4;1829:3;1825:14;1811:12;1777:63;:::i;:::-;1675:175;1939:4;1932:5;1928:16;1922:23;1958:63;2015:4;2010:3;2006:14;1992:12;1958:63;:::i;:::-;1860:171;1629:409;1499:539;;:::o;2044:350::-;2201:4;2239:2;2228:9;2224:18;2216:26;;2252:135;2384:1;2373:9;2369:17;2360:6;2252:135;:::i;:::-;2044:350;;;;:::o;2400:126::-;2437:7;2477:42;2470:5;2466:54;2455:65;;2400:126;;;:::o;2532:96::-;2569:7;2598:24;2616:5;2598:24;:::i;:::-;2587:35;;2532:96;;;:::o;2634:118::-;2721:24;2739:5;2721:24;:::i;:::-;2716:3;2709:37;2634:118;;:::o;2758:222::-;2851:4;2889:2;2878:9;2874:18;2866:26;;2902:71;2970:1;2959:9;2955:17;2946:6;2902:71;:::i;:::-;2758:222;;;;:::o;2986:122::-;3059:24;3077:5;3059:24;:::i;:::-;3052:5;3049:35;3039:63;;3098:1;3095;3088:12;3039:63;2986:122;:::o;3114:139::-;3160:5;3198:6;3185:20;3176:29;;3214:33;3241:5;3214:33;:::i;:::-;3114:139;;;;:::o;3259:329::-;3318:6;3367:2;3355:9;3346:7;3342:23;3338:32;3335:119;;;3373:79;;:::i;:::-;3335:119;3493:1;3518:53;3563:7;3554:6;3543:9;3539:22;3518:53;:::i;:::-;3508:63;;3464:117;3259:329;;;;:::o;3594:169::-;3678:11;3712:6;3707:3;3700:19;3752:4;3747:3;3743:14;3728:29;;3594:169;;;;:::o;3769:163::-;3909:15;3905:1;3897:6;3893:14;3886:39;3769:163;:::o;3938:366::-;4080:3;4101:67;4165:2;4160:3;4101:67;:::i;:::-;4094:74;;4177:93;4266:3;4177:93;:::i;:::-;4295:2;4290:3;4286:12;4279:19;;3938:366;;;:::o;4310:419::-;4476:4;4514:2;4503:9;4499:18;4491:26;;4563:9;4557:4;4553:20;4549:1;4538:9;4534:17;4527:47;4591:131;4717:4;4591:131;:::i;:::-;4583:139;;4310:419;;;:::o;4735:227::-;4875:34;4871:1;4863:6;4859:14;4852:58;4944:10;4939:2;4931:6;4927:15;4920:35;4735:227;:::o;4968:366::-;5110:3;5131:67;5195:2;5190:3;5131:67;:::i;:::-;5124:74;;5207:93;5296:3;5207:93;:::i;:::-;5325:2;5320:3;5316:12;5309:19;;4968:366;;;:::o;5340:419::-;5506:4;5544:2;5533:9;5529:18;5521:26;;5593:9;5587:4;5583:20;5579:1;5568:9;5564:17;5557:47;5621:131;5747:4;5621:131;:::i;:::-;5613:139;;5340:419;;;:::o;5765:118::-;5852:24;5870:5;5852:24;:::i;:::-;5847:3;5840:37;5765:118;;:::o;5889:442::-;6038:4;6076:2;6065:9;6061:18;6053:26;;6089:71;6157:1;6146:9;6142:17;6133:6;6089:71;:::i;:::-;6170:72;6238:2;6227:9;6223:18;6214:6;6170:72;:::i;:::-;6252;6320:2;6309:9;6305:18;6296:6;6252:72;:::i;:::-;5889:442;;;;;;:::o;6337:173::-;6477:25;6473:1;6465:6;6461:14;6454:49;6337:173;:::o;6516:366::-;6658:3;6679:67;6743:2;6738:3;6679:67;:::i;:::-;6672:74;;6755:93;6844:3;6755:93;:::i;:::-;6873:2;6868:3;6864:12;6857:19;;6516:366;;;:::o;6888:419::-;7054:4;7092:2;7081:9;7077:18;7069:26;;7141:9;7135:4;7131:20;7127:1;7116:9;7112:17;7105:47;7169:131;7295:4;7169:131;:::i;:::-;7161:139;;6888:419;;;:::o;7313:180::-;7361:77;7358:1;7351:88;7458:4;7455:1;7448:15;7482:4;7479:1;7472:15;7499:191;7539:3;7558:20;7576:1;7558:20;:::i;:::-;7553:25;;7592:20;7610:1;7592:20;:::i;:::-;7587:25;;7635:1;7632;7628:9;7621:16;;7656:3;7653:1;7650:10;7647:36;;;7663:18;;:::i;:::-;7647:36;7499:191;;;;:::o;7696:143::-;7753:5;7784:6;7778:13;7769:22;;7800:33;7827:5;7800:33;:::i;:::-;7696:143;;;;:::o;7845:351::-;7915:6;7964:2;7952:9;7943:7;7939:23;7935:32;7932:119;;;7970:79;;:::i;:::-;7932:119;8090:1;8115:64;8171:7;8162:6;8151:9;8147:22;8115:64;:::i;:::-;8105:74;;8061:128;7845:351;;;;:::o;8202:222::-;8295:4;8333:2;8322:9;8318:18;8310:26;;8346:71;8414:1;8403:9;8399:17;8390:6;8346:71;:::i;:::-;8202:222;;;;:::o;8430:225::-;8570:34;8566:1;8558:6;8554:14;8547:58;8639:8;8634:2;8626:6;8622:15;8615:33;8430:225;:::o;8661:366::-;8803:3;8824:67;8888:2;8883:3;8824:67;:::i;:::-;8817:74;;8900:93;8989:3;8900:93;:::i;:::-;9018:2;9013:3;9009:12;9002:19;;8661:366;;;:::o;9033:419::-;9199:4;9237:2;9226:9;9222:18;9214:26;;9286:9;9280:4;9276:20;9272:1;9261:9;9257:17;9250:47;9314:131;9440:4;9314:131;:::i;:::-;9306:139;;9033:419;;;:::o;9458:182::-;9598:34;9594:1;9586:6;9582:14;9575:58;9458:182;:::o;9646:366::-;9788:3;9809:67;9873:2;9868:3;9809:67;:::i;:::-;9802:74;;9885:93;9974:3;9885:93;:::i;:::-;10003:2;9998:3;9994:12;9987:19;;9646:366;;;:::o;10018:419::-;10184:4;10222:2;10211:9;10207:18;10199:26;;10271:9;10265:4;10261:20;10257:1;10246:9;10242:17;10235:47;10299:131;10425:4;10299:131;:::i;:::-;10291:139;;10018:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "638000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"fulfillElectricityDataRequest(uint256,uint256,uint256)": "infinite",
								"getElectricityData()": "infinite",
								"owner()": "2566",
								"renounceOwnership()": "30420",
								"setElectricityOracleAddress(address)": "infinite",
								"transferOwnership(address)": "30832"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 154,
									"end": 1907,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009b914c8318db9ddae9e714fe7e147227fd14f75bcdfd0ba547bd980d9d364f364736f6c63430008120033",
									".code": [
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "6C04593"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "2C8A7526"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "DEB93EF0"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 154,
											"end": 1907,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1326,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1326,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 833,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 833,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 636,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 636,
											"end": 827,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 636,
											"end": 827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 636,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 636,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 636,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 636,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 576,
											"end": 593,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 576,
											"end": 593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 593,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 576,
											"end": 593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 593,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 576,
											"end": 593,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 576,
											"end": 593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 576,
											"end": 593,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 576,
											"end": 593,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 576,
											"end": 593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 554,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 594,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 554,
											"end": 564,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 554,
											"end": 594,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 554,
											"end": 594,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 554,
											"end": 594,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 546,
											"end": 612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 546,
											"end": 612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 546,
											"end": 612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 546,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 546,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 546,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 546,
											"end": 612,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 546,
											"end": 612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1483,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1472,
											"end": 1484,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1464,
											"end": 1529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1464,
											"end": 1529,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1585,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1587,
											"end": 1598,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1554,
											"end": 1599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1550,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1551,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1540,
											"end": 1599,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1627,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1616,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1609,
											"end": 1628,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "AC692744937AAF6B0BDBD8E64A6994B068C12DCF93BF43BF34E349496317F729"
										},
										{
											"begin": 1668,
											"end": 1683,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1696,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1698,
											"end": 1700,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1644,
											"end": 1701,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1644,
											"end": 1701,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1326,
											"end": 1708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 880,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 880,
											"end": 902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 880,
											"end": 902,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 880,
											"end": 902,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 970,
											"end": 971,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 973,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 922,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 922,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 922,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 922,
											"end": 939,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 922,
											"end": 939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 922,
											"end": 939,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 922,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 939,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 922,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 973,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 922,
											"end": 973,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 914,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 914,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1064,
											"end": 1074,
											"name": "PUSH",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 1035,
											"end": 1061,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1035,
											"end": 1061,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1035,
											"end": 1074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1035,
											"end": 1074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1074,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1035,
											"end": 1074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1031,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1074,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1012,
											"end": 1279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1157,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1117,
											"end": 1157,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1157,
											"name": "PUSH",
											"source": 2,
											"value": "FE66D9DF"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1117,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1117,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1159,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1159,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1188,
											"end": 1192,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 1181,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1184,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1185,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1173,
											"end": 1192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "E99DD399072A7D799FFFF8860FE4EA02424A7301DA2E2F2C3EFC7FFCFAFE4819"
										},
										{
											"begin": 1237,
											"end": 1239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1212,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1268,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1263,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1255,
											"end": 1268,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1268,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1268,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1279,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1012,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1303,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1304,
											"end": 1312,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1313,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1289,
											"end": 1313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 833,
											"end": 1320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 636,
											"end": 827,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 636,
											"end": 827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 761,
											"end": 771,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 722,
											"end": 739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 722,
											"end": 739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 722,
											"end": 772,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "E420B96152542F57CE3D2D26D939A3C2860A82361801AD0A970A3BADC32D538E"
										},
										{
											"begin": 809,
											"end": 819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 788,
											"end": 820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 788,
											"end": 820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "41"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1423,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1315,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1410,
											"end": 1415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1392,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1392,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1387,
											"end": 1390,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1417,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 2038,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1499,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1655,
											"end": 1658,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1665,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1756,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1741,
											"end": 1764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1834,
											"end": 1838,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1832,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1839,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1811,
											"end": 1823,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1777,
											"end": 1840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1840,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1777,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1850,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1945,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2015,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2013,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1992,
											"end": 2004,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1958,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1958,
											"end": 2021,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1958,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 2031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1629,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1499,
											"end": 2038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2044,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2237,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2224,
											"end": 2242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2242,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2384,
											"end": 2385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2373,
											"end": 2382,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2369,
											"end": 2386,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2252,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2252,
											"end": 2387,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2252,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2394,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2394,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2526,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2400,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2477,
											"end": 2519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2466,
											"end": 2520,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2526,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2526,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2628,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2532,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2616,
											"end": 2621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2598,
											"end": 2622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2598,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2532,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2739,
											"end": 2744,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2721,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2745,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2721,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2709,
											"end": 2746,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2891,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2887,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2970,
											"end": 2971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2902,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2973,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2902,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3108,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2986,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3077,
											"end": 3082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3059,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3059,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3049,
											"end": 3084,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 3039,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3108,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3198,
											"end": 3204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3205,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3176,
											"end": 3205,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3241,
											"end": 3246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3214,
											"end": 3247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3214,
											"end": 3247,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3214,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3114,
											"end": 3253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3342,
											"end": 3365,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3370,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3373,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3563,
											"end": 3570,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3560,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3543,
											"end": 3552,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3539,
											"end": 3561,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3518,
											"end": 3571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3518,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3571,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3581,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3259,
											"end": 3588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3718,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3719,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3728,
											"end": 3757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3594,
											"end": 3763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3769,
											"end": 3932,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3769,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3909,
											"end": 3924,
											"name": "PUSH",
											"source": 4,
											"value": "556E617574686F72697A65642E00000000000000000000000000000000000000"
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 3925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3769,
											"end": 3932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3769,
											"end": 3932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 4304,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3938,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4083,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4165,
											"end": 4167,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4101,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4101,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4101,
											"end": 4168,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4101,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4168,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4168,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4266,
											"end": 4269,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4177,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4270,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4177,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4290,
											"end": 4293,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4286,
											"end": 4298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 4304,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 4304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 4304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3938,
											"end": 4304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4729,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4310,
											"end": 4729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4514,
											"end": 4516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4503,
											"end": 4512,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4499,
											"end": 4517,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4491,
											"end": 4517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4491,
											"end": 4517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4573,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4547,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4551,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4574,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4591,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4717,
											"end": 4721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4591,
											"end": 4722,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 4591,
											"end": 4722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4591,
											"end": 4722,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 4591,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4729,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4310,
											"end": 4729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4735,
											"end": 4962,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 4735,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4875,
											"end": 4909,
											"name": "PUSH",
											"source": 4,
											"value": "5265717565737420697320696E76616C6964206F7220616C7265616479206675"
										},
										{
											"begin": 4871,
											"end": 4872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4859,
											"end": 4873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4910,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4954,
											"name": "PUSH",
											"source": 4,
											"value": "6C66696C6C65642E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4939,
											"end": 4941,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4931,
											"end": 4937,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4927,
											"end": 4942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4955,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4735,
											"end": 4962,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4735,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5334,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4968,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5110,
											"end": 5113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5131,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5131,
											"end": 5198,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5131,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5124,
											"end": 5198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5124,
											"end": 5198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5296,
											"end": 5299,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5207,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5300,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5207,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5325,
											"end": 5327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5316,
											"end": 5328,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5328,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5334,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5334,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5334,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4968,
											"end": 5334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5759,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5340,
											"end": 5759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 5546,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5533,
											"end": 5542,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5593,
											"end": 5602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5583,
											"end": 5603,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5577,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5564,
											"end": 5581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5557,
											"end": 5604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5747,
											"end": 5751,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5621,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5621,
											"end": 5752,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 5621,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5613,
											"end": 5752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5613,
											"end": 5752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5759,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5759,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5759,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5870,
											"end": 5875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5852,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5852,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5850,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5840,
											"end": 5877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5765,
											"end": 5883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 6331,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5889,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6076,
											"end": 6078,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6061,
											"end": 6079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6089,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6155,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6142,
											"end": 6159,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6133,
											"end": 6139,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6089,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6089,
											"end": 6160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6089,
											"end": 6160,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6089,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6223,
											"end": 6241,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6214,
											"end": 6220,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6170,
											"end": 6242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6242,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6170,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6320,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6309,
											"end": 6318,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6305,
											"end": 6323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6252,
											"end": 6324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6324,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 6252,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 6331,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 6331,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 6331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 6331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 6331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 6331,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5889,
											"end": 6331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6510,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6337,
											"end": 6510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6477,
											"end": 6502,
											"name": "PUSH",
											"source": 4,
											"value": "4F7261636C65206E6F7420696E697469616C697A65642E000000000000000000"
										},
										{
											"begin": 6473,
											"end": 6474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6461,
											"end": 6475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6503,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6337,
											"end": 6510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6516,
											"end": 6882,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 6516,
											"end": 6882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6658,
											"end": 6661,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6679,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6743,
											"end": 6745,
											"name": "PUSH",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 6679,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6679,
											"end": 6746,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 6679,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6672,
											"end": 6746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6672,
											"end": 6746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6755,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6844,
											"end": 6847,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6755,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6755,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6755,
											"end": 6848,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 6755,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6873,
											"end": 6875,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6864,
											"end": 6876,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 6876,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6857,
											"end": 6876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6516,
											"end": 6882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6516,
											"end": 6882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6516,
											"end": 6882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6516,
											"end": 6882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 7307,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6888,
											"end": 7307,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7054,
											"end": 7058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7081,
											"end": 7090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7077,
											"end": 7095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7069,
											"end": 7095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7141,
											"end": 7150,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7135,
											"end": 7139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7127,
											"end": 7128,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7116,
											"end": 7125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7112,
											"end": 7129,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7105,
											"end": 7152,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7169,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7295,
											"end": 7299,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7169,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 7169,
											"end": 7300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7169,
											"end": 7300,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7169,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7161,
											"end": 7300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 7307,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 7307,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 7307,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 7307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7493,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 7313,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7438,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7358,
											"end": 7359,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7439,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7462,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 7455,
											"end": 7456,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7448,
											"end": 7463,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7482,
											"end": 7486,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7479,
											"end": 7480,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7487,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7690,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7499,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7576,
											"end": 7577,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 7558,
											"end": 7578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7553,
											"end": 7578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7610,
											"end": 7611,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 7592,
											"end": 7612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7587,
											"end": 7612,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7587,
											"end": 7612,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7632,
											"end": 7633,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7628,
											"end": 7637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 7637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7621,
											"end": 7637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7656,
											"end": 7659,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7654,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7650,
											"end": 7660,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7647,
											"end": 7683,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7647,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7647,
											"end": 7683,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 7663,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7647,
											"end": 7683,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7647,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7690,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7499,
											"end": 7690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7839,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 7696,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7753,
											"end": 7758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7778,
											"end": 7791,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7769,
											"end": 7791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7769,
											"end": 7791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7827,
											"end": 7832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 7800,
											"end": 7833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7800,
											"end": 7833,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7800,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7839,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7696,
											"end": 7839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7845,
											"end": 8196,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 7845,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 7921,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7964,
											"end": 7966,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7952,
											"end": 7961,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7950,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7939,
											"end": 7962,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7935,
											"end": 7967,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 8051,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7932,
											"end": 8051,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7970,
											"end": 8049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 7970,
											"end": 8049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7970,
											"end": 8049,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7970,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 8051,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7932,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 8171,
											"end": 8178,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8162,
											"end": 8168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8160,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8147,
											"end": 8169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8115,
											"end": 8179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8115,
											"end": 8179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8115,
											"end": 8179,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 8115,
											"end": 8179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8105,
											"end": 8179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8061,
											"end": 8189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7845,
											"end": 8196,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7845,
											"end": 8196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7845,
											"end": 8196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7845,
											"end": 8196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7845,
											"end": 8196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8295,
											"end": 8299,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8333,
											"end": 8335,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8322,
											"end": 8331,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8318,
											"end": 8336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8403,
											"end": 8412,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8399,
											"end": 8416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8390,
											"end": 8396,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8346,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 8346,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8655,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8430,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8570,
											"end": 8604,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8566,
											"end": 8567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8564,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8554,
											"end": 8568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8547,
											"end": 8605,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8639,
											"end": 8647,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8626,
											"end": 8632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8622,
											"end": 8637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8615,
											"end": 8648,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8655,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8661,
											"end": 9027,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 8661,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8888,
											"end": 8890,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 8883,
											"end": 8886,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 8824,
											"end": 8891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8824,
											"end": 8891,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8824,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8817,
											"end": 8891,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8817,
											"end": 8891,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8900,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8989,
											"end": 8992,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8900,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8900,
											"end": 8993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8900,
											"end": 8993,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8900,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9018,
											"end": 9020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9009,
											"end": 9021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9002,
											"end": 9021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9002,
											"end": 9021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8661,
											"end": 9027,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8661,
											"end": 9027,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8661,
											"end": 9027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8661,
											"end": 9027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9452,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 9033,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9237,
											"end": 9239,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9226,
											"end": 9235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9222,
											"end": 9240,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9240,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9280,
											"end": 9284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9296,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9272,
											"end": 9273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9261,
											"end": 9270,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9274,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9250,
											"end": 9297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 9440,
											"end": 9444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 9314,
											"end": 9445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9314,
											"end": 9445,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 9314,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9306,
											"end": 9445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9306,
											"end": 9445,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9033,
											"end": 9452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9458,
											"end": 9640,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 9458,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9598,
											"end": 9632,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9594,
											"end": 9595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9586,
											"end": 9592,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9582,
											"end": 9596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9575,
											"end": 9633,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9458,
											"end": 9640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9458,
											"end": 9640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9646,
											"end": 10012,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 9646,
											"end": 10012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9788,
											"end": 9791,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9809,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 9873,
											"end": 9875,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9868,
											"end": 9871,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 9809,
											"end": 9876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9876,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 9809,
											"end": 9876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9876,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9876,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 9974,
											"end": 9977,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 9885,
											"end": 9978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 9885,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10005,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9998,
											"end": 10001,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9994,
											"end": 10006,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9987,
											"end": 10006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9646,
											"end": 10012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9646,
											"end": 10012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9646,
											"end": 10012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9646,
											"end": 10012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10437,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 10018,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10184,
											"end": 10188,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10222,
											"end": 10224,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10211,
											"end": 10220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10207,
											"end": 10225,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10199,
											"end": 10225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10199,
											"end": 10225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10271,
											"end": 10280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10265,
											"end": 10269,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10261,
											"end": 10281,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10257,
											"end": 10258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10255,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10242,
											"end": 10259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10235,
											"end": 10282,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10425,
											"end": 10429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 10299,
											"end": 10430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10430,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10299,
											"end": 10430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10291,
											"end": 10430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10437,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10018,
											"end": 10437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"smart-contracts/contracts/energyContracts/Caller.sol",
								"smart-contracts/contracts/energyContracts/IElectricityOracle.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"fulfillElectricityDataRequest(uint256,uint256,uint256)": "06c04593",
							"getElectricityData()": "2c8a7526",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setElectricityOracleAddress(address)": "deb93ef0",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"carbonIntensity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceCarbon\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ElectricityDataReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ElectricityDataRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"}],\"name\":\"OracleAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"carbonIntensity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceCarbon\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"fulfillElectricityDataRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getElectricityData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"carbonIntensity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceCarbon\",\"type\":\"uint256\"}],\"internalType\":\"struct Caller.ElectricityData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setElectricityOracleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/energyContracts/Caller.sol\":\"Caller\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"smart-contracts/contracts/energyContracts/Caller.sol\":{\"keccak256\":\"0x8ff2795cc9f1aae9cd2f6235d6595e565b53863c293505d3dd22a0e35673cefc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30a9b5d0d68b6dbaf6985b09eb33fcf565033ca35b223f22f6d974f0bea526b8\",\"dweb:/ipfs/QmSfKnjyxrLikJUNmKVQpSnN8QgowB4CcPMYACuDfkMxeR\"]},\"smart-contracts/contracts/energyContracts/IElectricityOracle.sol\":{\"keccak256\":\"0x3954625683d1d688ac481a07b31429b3eabdcb692e806cdec1415d9d8edf520a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ef09fcd88867cb5cdd2933002ffe2b08a56eccbe724cf867a7afcc1d69631c\",\"dweb:/ipfs/Qmdn5QneSbjsZtQMHFEUR4kqjZzzi9PLZdqL8VF7vrYtaC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "smart-contracts/contracts/energyContracts/Caller.sol:Caller",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 143,
								"contract": "smart-contracts/contracts/energyContracts/Caller.sol:Caller",
								"label": "electricityOracle",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IElectricityOracle)309"
							},
							{
								"astId": 147,
								"contract": "smart-contracts/contracts/energyContracts/Caller.sol:Caller",
								"label": "requests",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 152,
								"contract": "smart-contracts/contracts/energyContracts/Caller.sol:Caller",
								"label": "results",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(ElectricityData)161_storage)"
							},
							{
								"astId": 154,
								"contract": "smart-contracts/contracts/energyContracts/Caller.sol:Caller",
								"label": "latestDataRequestTimestamp",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 156,
								"contract": "smart-contracts/contracts/energyContracts/Caller.sol:Caller",
								"label": "latestId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IElectricityOracle)309": {
								"encoding": "inplace",
								"label": "contract IElectricityOracle",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(ElectricityData)161_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Caller.ElectricityData)",
								"numberOfBytes": "32",
								"value": "t_struct(ElectricityData)161_storage"
							},
							"t_struct(ElectricityData)161_storage": {
								"encoding": "inplace",
								"label": "struct Caller.ElectricityData",
								"members": [
									{
										"astId": 158,
										"contract": "smart-contracts/contracts/energyContracts/Caller.sol:Caller",
										"label": "carbonIntensity",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 160,
										"contract": "smart-contracts/contracts/energyContracts/Caller.sol:Caller",
										"label": "priceCarbon",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"smart-contracts/contracts/energyContracts/IElectricityOracle.sol": {
				"IElectricityOracle": {
					"abi": [
						{
							"inputs": [],
							"name": "requestElectricityData",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"requestElectricityData()": "fe66d9df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"requestElectricityData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"smart-contracts/contracts/energyContracts/IElectricityOracle.sol\":\"IElectricityOracle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"smart-contracts/contracts/energyContracts/IElectricityOracle.sol\":{\"keccak256\":\"0x3954625683d1d688ac481a07b31429b3eabdcb692e806cdec1415d9d8edf520a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ef09fcd88867cb5cdd2933002ffe2b08a56eccbe724cf867a7afcc1d69631c\",\"dweb:/ipfs/Qmdn5QneSbjsZtQMHFEUR4kqjZzzi9PLZdqL8VF7vrYtaC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"smart-contracts/contracts/energyContracts/Caller.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/energyContracts/Caller.sol",
					"exportedSymbols": {
						"Caller": [
							301
						],
						"Context": [
							134
						],
						"IElectricityOracle": [
							309
						],
						"Ownable": [
							112
						]
					},
					"id": 302,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 113,
							"src": "65:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "smart-contracts/contracts/energyContracts/IElectricityOracle.sol",
							"file": "./IElectricityOracle.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 302,
							"sourceUnit": 310,
							"src": "118:34:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 139,
										"name": "Ownable",
										"nameLocations": [
											"173:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "173:7:2"
									},
									"id": 140,
									"nodeType": "InheritanceSpecifier",
									"src": "173:7:2"
								}
							],
							"canonicalName": "Caller",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 301,
							"linearizedBaseContracts": [
								301,
								112,
								134
							],
							"name": "Caller",
							"nameLocation": "163:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 143,
									"mutability": "mutable",
									"name": "electricityOracle",
									"nameLocation": "214:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "187:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IElectricityOracle_$309",
										"typeString": "contract IElectricityOracle"
									},
									"typeName": {
										"id": 142,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 141,
											"name": "IElectricityOracle",
											"nameLocations": [
												"187:18:2"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 309,
											"src": "187:18:2"
										},
										"referencedDeclaration": 309,
										"src": "187:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IElectricityOracle_$309",
											"typeString": "contract IElectricityOracle"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "requests",
									"nameLocation": "262:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "238:32:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 146,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 144,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "246:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "238:22:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 145,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "255:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "results",
									"nameLocation": "310:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "276:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElectricityData_$161_storage_$",
										"typeString": "mapping(uint256 => struct Caller.ElectricityData)"
									},
									"typeName": {
										"id": 151,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 148,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "284:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "276:33:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElectricityData_$161_storage_$",
											"typeString": "mapping(uint256 => struct Caller.ElectricityData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 150,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 149,
												"name": "ElectricityData",
												"nameLocations": [
													"293:15:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 161,
												"src": "293:15:2"
											},
											"referencedDeclaration": 161,
											"src": "293:15:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ElectricityData_$161_storage_ptr",
												"typeString": "struct Caller.ElectricityData"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 154,
									"mutability": "mutable",
									"name": "latestDataRequestTimestamp",
									"nameLocation": "332:26:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "324:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 153,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "324:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 156,
									"mutability": "mutable",
									"name": "latestId",
									"nameLocation": "372:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 301,
									"src": "364:16:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 155,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "364:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Caller.ElectricityData",
									"id": 161,
									"members": [
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "carbonIntensity",
											"nameLocation": "428:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "420:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "420:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "priceCarbon",
											"nameLocation": "465:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 161,
											"src": "457:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 159,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "457:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ElectricityData",
									"nameLocation": "394:15:2",
									"nodeType": "StructDefinition",
									"scope": 301,
									"src": "387:106:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "536:94:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 164,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "554:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "558:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "554:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 168,
																		"name": "electricityOracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "576:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IElectricityOracle_$309",
																			"typeString": "contract IElectricityOracle"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IElectricityOracle_$309",
																			"typeString": "contract IElectricityOracle"
																		}
																	],
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "568:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 166,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "568:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "568:26:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "554:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a65642e",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "596:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
																"typeString": "literal_string \"Unauthorized.\""
															},
															"value": "Unauthorized."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8aac2af0f774d3d92b3b1534edbfa4297c564e32014762bd9446ba4e8ae4e18e",
																"typeString": "literal_string \"Unauthorized.\""
															}
														],
														"id": 163,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "546:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "546:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "546:66:2"
											},
											{
												"id": 174,
												"nodeType": "PlaceholderStatement",
												"src": "622:1:2"
											}
										]
									},
									"id": 176,
									"name": "onlyElectricityOracle",
									"nameLocation": "512:21:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:2"
									},
									"src": "503:127:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "712:115:2",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "electricityOracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "722:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IElectricityOracle_$309",
															"typeString": "contract IElectricityOracle"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 185,
																"name": "newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "761:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 184,
															"name": "IElectricityOracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "742:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IElectricityOracle_$309_$",
																"typeString": "type(contract IElectricityOracle)"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "742:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IElectricityOracle_$309",
															"typeString": "contract IElectricityOracle"
														}
													},
													"src": "722:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IElectricityOracle_$309",
														"typeString": "contract IElectricityOracle"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "722:50:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 190,
															"name": "newAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "809:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "OracleAddressChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "788:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "788:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "EmitStatement",
												"src": "783:37:2"
											}
										]
									},
									"functionSelector": "deb93ef0",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 181,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 180,
												"name": "onlyOwner",
												"nameLocations": [
													"702:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "702:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "702:9:2"
										}
									],
									"name": "setElectricityOracleAddress",
									"nameLocation": "645:27:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "681:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "673:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "673:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:20:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:2"
									},
									"scope": 301,
									"src": "636:191:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "904:416:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_contract$_IElectricityOracle_$309",
																"typeString": "contract IElectricityOracle"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 201,
																"name": "electricityOracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "922:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IElectricityOracle_$309",
																	"typeString": "contract IElectricityOracle"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "970:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "962:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 203,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "962:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "962:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 202,
																	"name": "IElectricityOracle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "943:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IElectricityOracle_$309_$",
																		"typeString": "type(contract IElectricityOracle)"
																	}
																},
																"id": 207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "943:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IElectricityOracle_$309",
																	"typeString": "contract IElectricityOracle"
																}
															},
															"src": "922:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c65206e6f7420696e697469616c697a65642e",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5",
																"typeString": "literal_string \"Oracle not initialized.\""
															},
															"value": "Oracle not initialized."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_65700fef86196df868ed4c9927256e5a72eb7fa16ff5826328a619cfa71b8bf5",
																"typeString": "literal_string \"Oracle not initialized.\""
															}
														],
														"id": 200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "914:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "914:87:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 212,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1016:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1022:9:2",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1016:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 214,
															"name": "latestDataRequestTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1035:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3130",
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1064:10:2",
															"subdenomination": "minutes",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_600_by_1",
																"typeString": "int_const 600"
															},
															"value": "10"
														},
														"src": "1035:39:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1016:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 239,
												"nodeType": "IfStatement",
												"src": "1012:267:2",
												"trueBody": {
													"id": 238,
													"nodeType": "Block",
													"src": "1076:203:2",
													"statements": [
														{
															"assignments": [
																219
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 219,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "1112:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 238,
																	"src": "1104:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 218,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1104:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 223,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 220,
																		"name": "electricityOracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1117:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IElectricityOracle_$309",
																			"typeString": "contract IElectricityOracle"
																		}
																	},
																	"id": 221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1135:22:2",
																	"memberName": "requestElectricityData",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 308,
																	"src": "1117:40:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
																		"typeString": "function () external returns (uint256)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1117:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1104:55:2"
														},
														{
															"expression": {
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 224,
																		"name": "requests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 147,
																		"src": "1173:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																			"typeString": "mapping(uint256 => bool)"
																		}
																	},
																	"id": 226,
																	"indexExpression": {
																		"id": 225,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "1182:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1173:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1188:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1173:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 229,
															"nodeType": "ExpressionStatement",
															"src": "1173:19:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 231,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 219,
																		"src": "1237:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 230,
																	"name": "ElectricityDataRequested",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "1212:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1212:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 233,
															"nodeType": "EmitStatement",
															"src": "1207:33:2"
														},
														{
															"expression": {
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 234,
																	"name": "latestId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1255:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 235,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "1266:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1255:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 237,
															"nodeType": "ExpressionStatement",
															"src": "1255:13:2"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 240,
														"name": "results",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "1296:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElectricityData_$161_storage_$",
															"typeString": "mapping(uint256 => struct Caller.ElectricityData storage ref)"
														}
													},
													"id": 242,
													"indexExpression": {
														"id": 241,
														"name": "latestId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1304:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1296:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ElectricityData_$161_storage",
														"typeString": "struct Caller.ElectricityData storage ref"
													}
												},
												"functionReturnParameters": 199,
												"id": 243,
												"nodeType": "Return",
												"src": "1289:24:2"
											}
										]
									},
									"functionSelector": "2c8a7526",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getElectricityData",
									"nameLocation": "842:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:2:2"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "880:22:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ElectricityData_$161_memory_ptr",
													"typeString": "struct Caller.ElectricityData"
												},
												"typeName": {
													"id": 197,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 196,
														"name": "ElectricityData",
														"nameLocations": [
															"880:15:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 161,
														"src": "880:15:2"
													},
													"referencedDeclaration": 161,
													"src": "880:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ElectricityData_$161_storage_ptr",
														"typeString": "struct Caller.ElectricityData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:24:2"
									},
									"scope": 301,
									"src": "833:487:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1454:254:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 257,
																"name": "requests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "1472:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 259,
															"indexExpression": {
																"id": 258,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "1481:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1472:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265717565737420697320696e76616c6964206f7220616c72656164792066756c66696c6c65642e",
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1486:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b",
																"typeString": "literal_string \"Request is invalid or already fulfilled.\""
															},
															"value": "Request is invalid or already fulfilled."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30e58dd918bec4cd7e721e29aaca7534525dc49f319bdeb5ca798b445325218b",
																"typeString": "literal_string \"Request is invalid or already fulfilled.\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1464:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1464:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "1464:65:2"
											},
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 263,
															"name": "results",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1540:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ElectricityData_$161_storage_$",
																"typeString": "mapping(uint256 => struct Caller.ElectricityData storage ref)"
															}
														},
														"id": 265,
														"indexExpression": {
															"id": 264,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1548:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1540:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ElectricityData_$161_storage",
															"typeString": "struct Caller.ElectricityData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 267,
																"name": "carbonIntensity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "1570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 268,
																"name": "priceCarbon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "1587:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 266,
															"name": "ElectricityData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1554:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_ElectricityData_$161_storage_ptr_$",
																"typeString": "type(struct Caller.ElectricityData storage pointer)"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1554:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ElectricityData_$161_memory_ptr",
															"typeString": "struct Caller.ElectricityData memory"
														}
													},
													"src": "1540:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ElectricityData_$161_storage",
														"typeString": "struct Caller.ElectricityData storage ref"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "1540:59:2"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1609:19:2",
													"subExpression": {
														"baseExpression": {
															"id": 272,
															"name": "requests",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "1616:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 274,
														"indexExpression": {
															"id": 273,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1625:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1616:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "1609:19:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 278,
															"name": "carbonIntensity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "1668:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 279,
															"name": "priceCarbon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1685:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 280,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1698:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 277,
														"name": "ElectricityDataReceived",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "1644:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1644:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "EmitStatement",
												"src": "1639:62:2"
											}
										]
									},
									"functionSelector": "06c04593",
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 254,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 253,
												"name": "onlyElectricityOracle",
												"nameLocations": [
													"1432:21:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 176,
												"src": "1432:21:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1432:21:2"
										}
									],
									"name": "fulfillElectricityDataRequest",
									"nameLocation": "1335:29:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "carbonIntensity",
												"nameLocation": "1373:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1365:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "priceCarbon",
												"nameLocation": "1398:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1390:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1390:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1419:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1411:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:58:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:0:2"
									},
									"scope": 301,
									"src": "1326:382:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "e420b96152542f57ce3d2d26d939a3c2860a82361801ad0a970a3badc32d538e",
									"id": 288,
									"name": "OracleAddressChanged",
									"nameLocation": "1720:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"indexed": false,
												"mutability": "mutable",
												"name": "oracleAddress",
												"nameLocation": "1749:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1741:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1740:23:2"
									},
									"src": "1714:50:2"
								},
								{
									"anonymous": false,
									"eventSelector": "e99dd399072a7d799ffff8860fe4ea02424a7301da2e2f2c3efc7ffcfafe4819",
									"id": 292,
									"name": "ElectricityDataRequested",
									"nameLocation": "1775:24:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1808:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1800:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1800:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1799:12:2"
									},
									"src": "1769:43:2"
								},
								{
									"anonymous": false,
									"eventSelector": "ac692744937aaf6b0bdbd8e64a6994b068c12dcf93bf43bf34e349496317f729",
									"id": 300,
									"name": "ElectricityDataReceived",
									"nameLocation": "1823:23:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"indexed": false,
												"mutability": "mutable",
												"name": "carbonIntensity",
												"nameLocation": "1855:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1847:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1847:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"indexed": false,
												"mutability": "mutable",
												"name": "priceCarbon",
												"nameLocation": "1880:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1872:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1901:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1893:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1846:58:2"
									},
									"src": "1817:88:2"
								}
							],
							"scope": 302,
							"src": "154:1753:2",
							"usedErrors": []
						}
					],
					"src": "32:1875:2"
				},
				"id": 2
			},
			"smart-contracts/contracts/energyContracts/IElectricityOracle.sol": {
				"ast": {
					"absolutePath": "smart-contracts/contracts/energyContracts/IElectricityOracle.sol",
					"exportedSymbols": {
						"IElectricityOracle": [
							309
						]
					},
					"id": 310,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 303,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IElectricityOracle",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 309,
							"linearizedBaseContracts": [
								309
							],
							"name": "IElectricityOracle",
							"nameLocation": "75:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fe66d9df",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestElectricityData",
									"nameLocation": "109:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "131:2:3"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "152:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:9:3"
									},
									"scope": 309,
									"src": "100:61:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 310,
							"src": "65:98:3",
							"usedErrors": []
						}
					],
					"src": "32:131:3"
				},
				"id": 3
			}
		}
	}
}